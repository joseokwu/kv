import React, { useEffect, useRef, useState } from 'react'
import { useHistory } from 'react-router-dom'
import hi from '../../assets/icons/hiEmoji.png'
import { ProgressBar } from '../../mentorComponents/index'
import AssistantInfo from './mentorComponents/assistantInfo/assistantInfo'
import Consulting from './mentorComponents/consulting/consulting'
import Details from './mentorComponents/details/details'
import Interest from './mentorComponents/interest/interest'
import WorkExperience from './mentorComponents/workExperience/workExperience'
import './personalDetails.css'

export const PersonalDetails = () => {
  const wrapRef = useRef();
  const [progress, setProgress] = useState('');

  const {
    location: { hash },
    push,
  } = useHistory();

  const switchForm = (currentHash) => {
    push(currentHash)
  };

  useEffect(() => {
    wrapRef.current.scrollTop = 0;
    switch (hash) {
      case '#assistant_info':
        setProgress('100')
        break;
      case '#consulting':
        setProgress('70')
        break;
      case '#area_of_interest':
        setProgress('50')
        break;
      case '#work_experience':
        setProgress('30')
        break;
      case '#personal_details':
        setProgress('20')
        break;
      default:
        setProgress('20')
        break;
    }
  }, [hash]);

  return (
    <div className="mentor_personal_details_wrap" ref={wrapRef}>
      <section className="mentor_personal_details_header">
        <div>
          <span>
            <section
              className="d-flex align-items-center"
              style={{ columnGap: 12 }}
            >
              <h4>Hi Daniella</h4>
              <img src={hi} alt={'hi'} />
            </section>
            <p>Letâ€™s customise your experience</p>
          </span>
          <ProgressBar progress={progress} />
        </div>

        <section className="mentor_personal_details_grid">
        <div>
          <ul className="mentor_personal_details_list">
            <li
              onClick={() => switchForm('#personal_details')}
              className={
                (hash === '#personal_details' || hash === '') && 'active-li'
              }
            >
              Personal Details
            </li>

            <li
              onClick={() => switchForm('#work_experience')}
              className={
                (hash === '#work_experience' || hash === '#work_experience') && 'active-li'
              }
            >
              Work Experience
            </li>

            <li
              onClick={() => switchForm('#area_of_interest')}
              className={
                (hash === '#area_of_interest' && 'active-li') 
              }
            >
              Area of interest / skills
            </li>

            <li
              onClick={() => switchForm('#consulting')}
              className={(hash === '#consulting' && 'active-li')}
            >
              Consultant Offerings
            </li>

            <li
              onClick={() => switchForm('#assistant_info')}
              className={
                (hash === '#assistant_info' && 'active-li') 
              }
            >
              Assistant Info
            </li>
          </ul>
        </div>
        </section>
      </section>

      <section className="mentor_personal_details_grid">
        <div>
          <ul className="mentor_personal_details_list">
            <li
              onClick={() => switchForm('#personal_details')}
              className={
                (hash === '#personal_details' || hash === '') && 'active-li'
              }
            >
              Personal Details
            </li>

            <li
              onClick={() => switchForm('#work_experience')}
              className={
                (hash === '#work_experience' || hash === '#work_experience') && 'active-li'
              }
            >
              Work Experience
            </li>

            <li
              onClick={() => switchForm('#area_of_interest')}
              className={
                (hash === '#area_of_interest' && 'active-li') 
              }
            >
              Area of interest / skills
            </li>

            <li
              onClick={() => switchForm('#consulting')}
              className={(hash === '#consulting' && 'active-li')}
            >
              Consultant Offerings
            </li>

            <li
              onClick={() => switchForm('#assistant_info')}
              className={
                (hash === '#assistant_info' && 'active-li') 
              }
            >
              Assistant Info
            </li>
          </ul>
        </div>
    
        <div className="mt-2 d-flex justify-content-end">
          {hash === "" || hash === '#personal_details' ? (
            <Details />
          ) : hash === '#work_experience' ? (
            <WorkExperience />
          ) : hash === '#area_of_interest' ? (
            <Interest />
          ) : hash === '#consulting' ? (
            <Consulting />
          ) : hash === '#assistant_info' ? (
            <AssistantInfo />
          ) : (
            hash === ''
          )}
        </div>
      </section>
    </div>
  )
}









DashCard

import React from 'react'
import {
  AssignedStartupCard,
  DashCard,
  UpcomingEventCard,
} from '../../mentorComponents'
import './dashboard.css'
import { useHistory } from 'react-router-dom'


export const Dashboard = () => {
  const { push } = useHistory()

  const cardData = [
    { name: 'Incubation Program', count: 200, color: '#D5D6F4' },
    { name: 'Acceleration Program', count: 20, color: '#DEF6FF' },
    { name: 'Mentors', count: 20, color: '#D5D6F4' },
    { name: 'Investors', count: 30, color: '#DEF6FF' },
  ]
  return (
    <div className="dashboard-main">
      <section className="row">
        <section className="col-lg-12 d-flex align-items-center dashboard-cards">
          {cardData.map((data, i) => (
            <DashCard
              name={data.name}
              count={data.count}
              color={data.color}
              key={i}
            />
          ))}
        </section>
      </section>

      <section className="row mt-0 dash-main-content">
        <div className="col-lg-12">
          <div style={{ marginTop: '2.38rem' }}>
            <section className="d-flex align-items-center justify-content-between mb-3">
              <p className="dash-sub-title">Assigned Startups</p>
              <p className="see-all">See All</p>
            </section>

            <section className="row">
              <div className="col-xl-4 mb-4">
                <AssignedStartupCard onClick={() => push('/dashboard/view')} />
              </div>
              <div className="col-xl-4 mb-4">
                <AssignedStartupCard onClick={() => push('/dashboard/view')} />
              </div>
              <div className="col-xl-4 mb-4">
                <AssignedStartupCard onClick={() => push('/dashboard/view')} />
              </div>
            </section>
          </div>
        </div>

        <div className="col-lg-12">
          <div style={{ marginTop: '2.38rem' }}>
            <section className="d-flex align-items-center justify-content-between mb-3">
              <p className="dash-sub-title">Upcoming Events</p>
              <p className="see-all"><a className="see-all-event" href="/events">See All</a></p>
            </section>

            <section className="row">
              <div className="col-xl-4 mb-4">
                <UpcomingEventCard />
              </div>
              <div className="col-xl-4 mb-4">
                <UpcomingEventCard />
              </div>
              <div className="col-xl-4 mb-4">
                <UpcomingEventCard />
              </div>
            </section>
          </div>
        </div>
      </section>
    </div>
  )
}


DashCard css


.dashboard-main {
  padding: 20px 26px 52px 26px;
}

.dashboard-cards {
  column-gap: 19px;
  width: 100%;
  overflow-x: auto;
  /* overflow-y: auto; */
  padding-bottom: 20px;
}

.dashboard-cards::-webkit-scrollbar {
  height: 0px;
}

.dashboard-applications-header {
  margin-bottom: 1rem;
}

.dashboard-applications-header h5 {
  font-style: normal;
  font-weight: bold;
  font-size: 1.125rem;
  line-height: 140%;
  color: rgba(24, 24, 25, 0.9);
}

.dashboard-applications-header span {
  font-style: normal;
  font-weight: normal;
  font-size: 1.125rem;
  line-height: 140%;
  text-decoration-line: underline;
  color: #2e3192;
}

.dash-main-content {
  max-width: 1200px;
}

.dash-sub-title {
  font-family: Lato;
  font-style: normal;
  font-weight: bold;
  font-size: 1.125rem;
  line-height: 140%;
  color: rgba(24, 24, 25, 0.9);
}

.see-all {
  font-family: Lato;
  font-style: normal;
  font-weight: normal;
  font-size: 0.875rem;
  line-height: 140%;
  color: #041b55;
  cursor: pointer;
}

.see-all-event {
  font-family: Lato;
  font-style: normal;
  font-weight: normal;
  font-size: 0.875rem;
  line-height: 140%;
  color: #041b55;
  cursor: pointer;
  text-decoration: none;
}

.see-all-event:hover {
  text-decoration: none;
  color: #041b55;
}

.network-space {
  background: #f9f9fc70;
  border-radius: 10px 0px 0px 0px;
}

.network-space-header {
  border-bottom: 1px solid #ececff;
  padding: 1.56rem 2.2rem;
  padding-bottom: 0.8rem;
  margin-bottom: 1rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.network-space-header h3 {
  font-family: DM Sans;
  font-style: normal;
  font-weight: bold;
  font-size: 1.125rem;
  line-height: 140%;
  color: rgba(24, 24, 25, 0.9);
}

.opp-connects {
  padding: 1rem 2.2rem;
}





import React from 'react'
import {
  DashCard,
  EvaluationCompletedCard,
  AllEvaluationCard,
  Tabs,
  EvaluationPendingCard,
} from '../../mentorComponents'
import filter from '../../assets/icons/filterFunnel.svg'
import down from '../../assets/icons/chevronDown.svg'
import './evaluation.css'

export const MentorEvaluation = ({ history }) => {
  const {
    location: { hash },
  } = history

  const cardData = [
    { name: 'Incubation Program', count: 200, color: '#D5D6F4' },
    { name: 'Acceleration Program', count: 20, color: '#DEF6FF' },
    { name: 'Total Startup Assigned', count: 300, color: '#D5D6F4' },
  ]

  const renderContent = () => {
    switch (hash) {
      case '#All':
        return <AllEvaluationCard />

      case '#Pending':
        return <div className="col-xl-6"><EvaluationPendingCard /></div>

      case '#Completed':
        return <div className="col-xl-6"><EvaluationCompletedCard /></div> 

      default:
        return <AllEvaluationCard />
    }
  }

  const tabItems = ['All', 'Pending', 'Completed']

  return (
    <div className="dashboard-main">
      <section className="d-flex align-items-center dashboard-cards">
        {cardData.map((data, i) => (
          <DashCard
            name={data.name}
            count={data.count}
            color={data.color}
            key={i}
          />
        ))}
      </section>

      <section className="mt-5 d-flex align-items-center justify-content-between">
        <Tabs tabItems={tabItems} />
        <div>
          <button
            className="d-flex align-items-center filter-btn"
            style={{ columnGap: 7 }}
            data-toggle="dropdown"
          >
            <img src={filter} alt="filter" />
            <span>Filter</span>
            <img className="pl-1" src={down} alt="down" />
          </button>
        </div>
      </section>

      <div className="pt-3">
        <section className="mt-1">{renderContent()}</section>
      </div>
    </div>
  )
}



{
  name: "Dashboard",
  path: "/",
  component: WithDashboardLayout(Dashboard),
  exact: true,
  protected: false,
},
{
  name: "RegisterPartner",
  path: "/RegisterPartner",
  exact: true,
  component: WithInvestorRegisterLayout(PartnerRegistration),
  protected: false,
},
{
  name: "RegisterInvestor",
  path: "/investor/register",
  component: WithInvestorRegisterLayout(InvestorRegistration),
  exact: true,
  protected: false,
},
{
  name: "InvestorDashboard",
  path: "/investor/dashboard",
  component: WithMainInvestorLayout(InvestorDashboard),
  exact: true,
  protected: false,
},

{
  name: "Pro",
  path: "/prof",
  component: WithRegisterLayout(Profile),
  exact: true,
  protected: false,
},
{
  name: "ContactUs",
  path: "/support",
  component: WithDashboardLayout(ContactUs),
  exact: true,
  protected: false,
},
{
  name: "Applicants",
  path: "/applicants",
  component: WithMainInvestorLayout(Applicants),
  exact: true,
  protected: false,
},
{
  name: "Notification",
  path: "/notification",
  component: WithMainInvestorLayout(Notification),
  exact: true,
  protected: false,
},
{
  name: "Program",
  path: "/program",
  component: WithDashboardLayout(Program),
  exact: true,
  protected: false,
},
{
  name: "TodoList",
  path: "/todolist",
  component: WithDashboardLayout(StartupTodoList),
  exact: true,
  protected: false,
},
{
  name: "Networking",
  path: "/networking",
  component: WithDashboardLayout(StartupNetworking),
},
{
  name: "DealRoom",
  path: "/dealroom",
  component: WithDashboardLayout(StartupDealRoom),
},
{
  name: "InvestorDashboard",
  path: "/fundraising",
  component: WithDashboardLayout(FundingRaising),
  exact: true,
  protected: false,
},
{
  name: "InvestorOpportunity",
  path: "/investor/opportunities",
  component: WithMainLayout(InvestorOpportunity),
  exact: true,
  protected: false,
},
{
  name: "Startup-Profile",
  path: "/startup-profile",
  component: WithDashboardLayout(StartupProfile),
  exact: true,
  protected: false,
},
{
  name: "StartupRegistration",
  path: "/startupRegistration",
  component: WithStartupRegistrationLayout(StartUpRegistration),
  exact: true,
  protected: false,
},
{
  name: "E-Academy",
  path: "/eacademy",
  component: WithDashboardLayout(EAcademy),
  exact: true,
  protected: false,
},
{
  name: "BoosterPartner",
  path: "/boosterpartner",
  component: WithDashboardLayout(BoosterPartner),
  exact: true,
  protected: false,
},
{
  name: "Opportunity",
  path: "/investor/opportunities/:id/founder",
  component: WithMainLayout(FounderProfile),
  exact: true,
  protected: false,
},
{
  name: "Opportunity",
  path: "/investor/opportunities/:id/commitment",
  component: WithMainLayout(Commitment),
  exact: true,
  protected: false,
},
{
  name: "Interested",
  path: "/investor/interested",
  component: WithMainLayout(InvestorInterested),
  exact: true,
  protected: false,
},
{
  name: "Interested",
  path: "/investor/interested/:id",
  component: WithMainLayout(Opportunity),
  exact: true,
  protected: false,
},
{
  name: "Portfolio",
  path: "/investor/portfolio",
  component: WithMainLayout(InvestorPortfolio),
  exact: true,
  protected: false,
},
{
  name: "Events",
  path: "/investor/events",
  component: WithMainLayout(InvestorEvents),
  exact: true,
  protected: false,
},
{
  name: "Schedule",
  path: "/investor/schedule",
  component: WithMainLayout(InvestorSchedule),
  exact: true,
  protected: false,
},
{
  name: "Schedule",
  path: "/investor/schedule-calendar",
  component: WithMainLayout(ScheduleCalendar),
  exact: true,
  protected: false,
},
{
  name: "Evaluation",
  path: "/investor/evaluation",
  component: WithMainLayout(InvestorEvaluation),
  exact: true,
  protected: false,
},
{
  name: "Networking",
  path: "/investor/networking",
  component: WithMainLayout(InvestorNetwork),
  exact: true,
  protected: false,
},

{
  name: "DealRoom",
  path: "/investor/deal_room",
  component: WithMainLayout(InvestorDeal),
  exact: true,
  protected: false,
},
{
  name: "DealRoom",
  path: "/investor/deal_room/:id",
  component: WithMainLayout(DealRoom),
  exact: true,
  protected: false,
},
{
  name: "DealRoom",
  path: "/investor/deal_room/:id/:folderName",
  component: WithMainLayout(DealFolder),
  exact: true,
  protected: false,
},

{
  name: "Investor profile",
  path: "/investor/profile",
  component: WithMainLayout(InvestorProfile),
  exact: true,
  protected: false,
},
{
  name:'signin',
  path:'/signin',
  exact: true,
  component: SignIn,
  protected: false,
},
{
  name:'SignUp',
  path:'/signup',
  component: SignUp,
  exact: true,
  protected: false,
},
{
  name:'ContactUS',
  path:'/mentor/support',
  component: WithMentorMainLayout(MentorContactUs),
  exact: true,
  protected: false,
},
{
  name:'Notification',
  path:'/notification',
  component: WithMainLayout(Notification),
  exact: true,
  protected: false,
},
{
  name:'ConfirmEmail',
  path:'/forgot/password',
  component: ConfirmEmail,
  exact: true,
  protected: false,
},
{
  name: 'ForgotPassword',
  path: '/forgot-password',
  component: ForgotPassword,
  exact: true,
  protected: false,
},
{
  name:'CheckMail',
  path:'/confirm/email',
  component: CheckMail,
  exact: true,
  protected: false,
},
{
  name: 'ResetPassword',
  path: '/reset/password',
  component: ResetPassword,
  exact: true,
  protected: false,
},
{
  name: 'VerifyOtp',
  path: '/verify/otp',
  component: VerifyOTP,
  exact: true,
  protected: false,
},
{
  name: 'Congrats',
  path: '/signup/congrats',
  component:  WithMentorRegisterLayout(Congrats),
  exact: true,
  protected: false,
},
{
  name: 'Profile',
  path: '/prof',
  component: WithRegisterLayout(Profile),
  exact: true,
  protected: false,
},
{
  name: 'InvitePeer',
  path: '/signup/invite',
  component:  WithMentorRegisterLayout(InvitePeer),
  exact: true,
  protected: false,
},

// Mentor Routes Starts Here
{
  name:'MentorDashboard',
  path:'/mentor/dashboard',
  component: WithMentorMainLayout(MentorDashboard),
  exact: true,
  protected: false,
},
{
  name: 'PersonalDetails',
  path: '/mentor/registration',
  component:  WithMentorRegisterLayout(PersonalDetails),
  exact: true,
  protected: false,
},
{
  name: 'ViewDetails',
  path: '/mentor/dashboard/view',
  component: WithMainLayout(ViewDetails),
  exact: true,
  protected: false,
},
{
  name: 'MentorEvaluation',
  path: '/mentor/evaluation',
  component: WithMainLayout(MentorEvaluation),
  exact: true,
  protected: false,
},
{
  name: 'Program',
  path: '/mentor/program',
  component: WithMainLayout(MentorProgram),
  exact: true,
  protected: false,
},
{
  name: 'Assignmrnts',
  path: '/mentor/assignments',
  component: WithMentorMainLayout(Assignments),
  exact: true,
  protected: false,
},
{
  name: 'Events',
  path: '/mentor/events',
  component: WithMentorMainLayout(Events),
  exact: true,
  protected: false,
},
{
  name: 'Schedule',
  path: '/mentor/schedule',
  component: WithMentorMainLayout(Schedule),
  exact: true,
  protected: false,
},
{
  name: 'Networking',
  path: '/mentor/networking',
  component:WithMentorMainLayout(MentorNetworking),
  exact: true,
  protected: false,
},
{
  name: 'DealRoom',
  path: '/mentor/dealroom',
  component: WithMentorMainLayout(MentorDealRoom),
  exact: true,
  protected: false,
},
{
  name: 'DealRoom',
  path: '/mentor/deal_room/:id',
  component: WithMentorMainLayout(MentorDealRoom),
  exact: true,
  protected: false,
},
// {
//   name: â€˜DealRoomâ€™,
//   path: â€˜/deal_room/:id/:folderNameâ€™,
//   component: WithMainLayout(DealFolder),
//   exact: true,
//   protected: false,
// },
{
  name: 'DashboardProfile',
  path: '/mentor/dashboard/founder',
  component: WithMainLayout(MentorDashboardProfile),
  exact: true,
  protected: false,
},
{
  name: 'Evaluation',
  path: '/mentor/evaluation/evaluate',
  component: WithRegisterLayout(Evaluation),
  exact: true,
  protected: false,
},
{
  name: 'EvaluationViewProfile',
  path: '/mentor/evaluation/view',
  component: WithMentorMainLayout(MentorEvaluationViewProfile),
  exact: true,
  protected: false,
},
{
  name: 'CreateAssignment',
  path: '/mentor/assignments/create',
  component: WithMentorMainLayout(MentorCreateAssignment),
  exact: true,
  protected: false,
},
{
  name: 'MoreDetails',
  path: '/mentor/assignments/create/details',
  component:WithMentorMainLayout(MentorMoreDetails),
  exact: true,
  protected: false,
},
{
  name: 'ViewAssignmnet',
  path: '/mentor/assignments/view',
  component: WithMainLayout(MentorViewAssignment),
  exact: true,
  protected: false,
},


 // Mentor Routes Ends Here



 import {

  BoosterDashboard,
  PartnerRegistration,
  BoosterProfile,
  Applicants,
  ContactUs,
  Notification,
  InvestorRegistration,
  InvestorDashboard,
  InvestorOpportunity,
  Opportunity,
  InvestorInterested,
  InvestorPortfolio,
  InvestorEvents,
  InvestorSchedule,
  InvestorEvaluation,
  InvestorNetwork,
  InvestorDeal,
  FounderProfile,
  Commitment,
  DealRoom,
  DealFolder,
  ScheduleCalendar,
  InvestorProfile,
} from "../Investorpages"; 

import {
  MentorDashboard,
  SignUp,
  MentorSignIn,
  MentorConfirmEmail,
  MentorForgotPassword,
  MentorCheckMail,
  MentorResetPassword,
  MentorVerifyOTP,
  MentorProfile,
  MentorNotification,
  MentorCongrats,
  MentorInvitePeer,
  MentorPersonalDetails,
  MentorEvaluate,
  MentorProgram,
  Events,
  Assignments,
  Schedule,
  MentorNetworking,
  MentorEvaluationViewProfile,
  MentorContactUs,
  MentorCreateAssignment,
  MentorMoreDetails,
  ViewDetails,
  MentorDashboardProfile,
  MentorDealRoom,
  
  // DealFolder,
  MentorEvaluation,
} from '../mentorPages';
import { MentorViewAssignment } from "../mentorPages/mentorAssignments/components/viewEvaluation/viewAssignment";

======================================================================
=================================================================
Date formats

const d = new Date();
let hours = d.getHours()
minute = d.getMinutes();
hours = (hours % 12) || 12;




















user:
assignment: []
businessname: "Bisi business"
event:
data: (3) [{â€¦}, {â€¦}, {â€¦}]
results: {next: {â€¦}}
total: 22
[[Prototype]]: Object
partner: []
role: ['startup']
startUpProfile: {logo: 'https://www.w3schools.com/js/tryit.asp?filename=tryjs_date_current', elevatorPitch: 'sdggsfhhhhh', brand: 'https://www.w3schools.com/js/tryit.asp?filename=tryjs_date_current', startupName: 'Bisi business', yearFounded: '2022-03-29T10:42:44.870Z', â€¦}
userId: "62401b6c823102167a32a885"


addLocation: "adeneka"
attendees: (2) [{â€¦}, {â€¦}]
endDate: "Mon Mar 28 2022 21:24:48 GMT+0100 (West Africa Standard Time)"
endTime: "Mon Mar 28 2022 21:24:48 GMT+0100 (West Africa Standard Time)"
eventDescription: "Come and play"
eventPicture: "http://zoom.com"
joinWith: "meet.com/google"
notifyMe: "Yes"
startDate: "Mon Mar 28 2022 21:24:48 GMT+0100 (West Africa Standard Time)"
startTime: "Mon Mar 28 2022 21:24:48 GMT+0100 (West Africa Standard Time)"
titleOfEvent: "Meeting with client"
visibility: "Yes"
__v: 0
_id: "624226224757e7be6520c364"








const fetchData = async () => {
  setLoading(true);
  const res = await getEvents();
  setEvents(res?.data);
  setSelectionEvents(() =>
    res?.data?.filter((x) => x.eventType === "selectionDay")
  );
  setDemoEvents(() => res?.data?.filter((x) => x.eventType === "demoDay"));
  setPitchEvents(() =>
    res?.data?.filter((x) => x.eventType === "pitchSession")
  );
  setLoading(false);
};

useEffect(() => {
  fetchData();
}, []);



===================================================
console.log('hello')
const { files, name } = e.target;
setFile(
  fileInfo.map((item) => {
    if (name === item?.name) {
      item.file = files[0]
      item.size = formatBytes(files[0].size)
    }
    return item
  }),
)

<FileSize>
{' '}
{fileInfo[1].file !== null
  ? `${fileInfo[1].size}`
  : '(Max. File size 5mb)'}{' '}
</FileSize>

   <div className="form-group col-12 mt-5">
                <VideoWrapper>
                  <label> Pitch deck uploaded</label>
                  <div className="row">
                      <div className="my-4 d-flex justify-content-center text-center">
                        <span>No File Uploaded</span>
                      </div>
                    
                  </div>
                </VideoWrapper>
              </div>

const [uploadDoc, setUploadDock] = useState({
  pitchDeckFile: stateAuth?.user?.pitchDeck?.pitchDeckFile,
  pitchDeckVideo: stateAuth?.user?.pitchDeck?.pitchDeckVideo,
});
====================================================================
=======================================================================
fundRaising:
capTable:
amountInvestedByFounders: "987998"
amountRaised: "78008"
_id: "624afa6323b2f89cc25c680e"
[[Prototype]]: Object
financialProjection:
_id: "624afa6323b2f89cc25c6810"
[[Prototype]]: Object
fundUtilization:
_id: "624afa6323b2f89cc25c680d"
[[Prototype]]: Object
fundingAsk:
dilution: "900000"
fundraisingAmount: "696767"
hasLeadInvestor: false
hasPreviousFundraising: false
instrumentForRound: "Fund 2"
numberOfRounds: "Fund 2"
postMoneyValuation: "8666976976"
preMoneyValuation: "9777977"
terms: ['uouougugouo']
_id: "624afa6323b2f89cc25c680c"
[[Prototype]]: Object
previousRound:
dateOfFunding: null
dilution: "900000"
fundraisingAmount: "696767"
hasLeadInvestor: true
instrumentForRound: "Fund 3"
numberOfRounds: "Fund 3"
preMoneyValuation: "9777977"
_id: "624afa6323b2f89cc25c680f"
[[Prototype]]: Object
_id: "624afa6323b2f89cc25c680b"
[[Prototype]]: Object

=======================================================
======================================================
 // const [contacts, setContacts] = useState({
  //   email: stateAuth?.user?.team?.founderInfo?.email,
  //   country: stateAuth?.user?.team?.founderInfo?.country,
  //   state: stateAuth?.user?.team?.founderInfo?.state,
  //   city: stateAuth?.user?.team?.founderInfo?.city,
  // })
  // const [socialMedia, setSocialMedia] = useState({
  //   linkedIn: stateAuth?.user?.team?.socialMedia?.linkedIn,
  //   twitter: stateAuth?.user?.team?.socialMedia?.twitter,
  //   website: stateAuth?.user?.team?.socialMedia?.website,
  // })

  ====================================================
  ======================================================
   // const formik = useFormik({
  //   initialValues: {
  //     avatar:
  //       'https://www.w3schools.com/js/tryit.asp?filename=tryjs_date_current',
  //     briefIntroduction: stateAuth?.user?.team?.briefIntroduction,
  //     firstName: stateAuth?.user?.team?.firstName,
  //     lastName: stateAuth?.user?.team?.lastName,
======================================================
===========================================================
<FormWrapper height='70%'>
          <div className='div border-bottom pb-2'>
            <span>Co-Founders</span>
            <p className='pt-3'>Create a profile for your Co-Founders</p>
          </div>

          <div className='mt-4'>
            <label>Do you have Co-Founders?*</label>

            <div className='d-flex'>
              <BntWrap>
                <button
                  className={`me-3 ${coFounder === 'yes' && 'active'}`}
                  onClick={(e) => {
                    e.preventDefault();
                    setCoFounder('yes');
                  }}
                >
                  Yes
                </button>
                <button
                  className={`me-3 ${coFounder === 'no' && 'active'}`}
                  onClick={(e) => {
                    e.preventDefault();
                    setCoFounder('no');
                  }}
                >
                  No
                </button>
              </BntWrap>
            </div>

            <div className='sold'>
              <div className='d-flex justify-content-center'>
                <div
                  className=''
                  data-target='#cofounder'
                  onClick={() => setShowModal(true)}
                >
                  <Tag
                    name='+ Add Co-founder'
                    color='#4F4F4F'
                    bg='rgba(183, 218, 231, 0.5'
                    padding='8px 14px'
                  />
                </div>
              </div>
            </div>
          </div>
        </FormWrapper>
===================================================================
=================================================================
<VideoWrapper>
<label> Product demo upload</label>
<div className="row">
  <div className=" col-lg-8 col-12">
    <div className="div p-5">
      <img src={RedFile} alt=".#" />
    </div>
    <div id="div" className="p-2">
      <div className="d-flex mt-n2">
        <img
          src={BlueFile}
          alt=".#"
          style={{ width: '10%', height: '10%' }}
          className="mt-3"
        />
        <p className="px-4">Product Demo</p>
      </div>
      <p className="my-n2 px-5 p">2.5 mb</p>
    </div>
  </div>
</div>
</VideoWrapper>
===========================================================
=====================================================
<iframe
key={i}
        src={item}
        frameborder="0"
        allow="autoplay; encrypted-media"
        allowfullscreen
        title="video"
        style={{
        borderRadius:"20px",
        maxHeight:"150px",
        width:"250px"
      }}
      />
      onClick={deleteVid}


   <video 
                      style={{
                        borderRadius:"20px",
                       maxHeight:"150px",
                        width:"250px"
                      }}
                      key={i}
                      className='mb-3'
                     controls>
                    <source src={item} id="video_here" />
                      Your browser does not support HTML5 video.
                     </video> 

=======================================================================
=====================================================================

 const pitchDeck = {
        type: "pitchDeck",
        accType: "startup",
        values: {
          pitchDeckFile: fileDoc,
          pitchDeckVideo: videoDoc,
        },
        userId: stateAuth?.user?.userId,
      };
      console.log(pitchDeck);

      if (opts === "next") {
        setOpts(true);
        let result = await updateFounderProfile(pitchDeck);

        if (result?.success) {
          toast.success("Pitch Deck" + "     " + result?.message);
          setOpts(false);
          return changePath(path + 1);
        }
      }
      setLoading(true);
      let result = await updateFounderProfile(pitchDeck);

      if (!result?.success) {
        toast.error(
          result?.message || "There was an error updating the pitchDeck"
        );
        setLoading(false);
        return;
      }
      toast.success("Pitch Deck" + " " + result?.message);
      setLoading(false);
      history.push("/startup/dashboard");
=====================================================================
=======================================================================
      {/* <FileWrapper className="d-flex justify-content-center text-center">
                  {videoDoc !== null ? (
                    <video
                      style={{
                        borderRadius: '20px',
                        maxHeight: '150px',
                        width: '250px',
                      }}
                      className="mb-3"
                      controls
                    >
                      <source src={videoDoc} id="video_here" />
                      Your browser does not support HTML5 video.
                    </video>
                  ) : videoUploading ? (
                    <CircularLoader color={'#000'} />
                  ) : (
                    <>
                      <img src={DownloadIcon} alt="#" />
                      <FileText>Drag & Drop</FileText>
                      <FileText>
                        Drag files or click here to upload pitch video{' '}
                      </FileText>
                    </>
                  )}

                  <input
                    type="file"
                    name="pitchDeckVideo"
                    id="pitch-docu"
                    onChange={handleChangeVid}
                    accept="video/*"
                    hidden
                  />
                  <LabelButton for="pitch-docu">Upload Files</LabelButton>
                </FileWrapper> */}

=====================================================================
==================================================================


// import { CircularLoader } from "../../../../../../Startupcomponents/CircluarLoader/CircularLoader";
// import toast from "react-hot-toast";


  // const [fileDoc, setFileDoc] = useState(
  //   stateAuth?.user?.fundRaising?.fundUtilization?.files ?? null
  // );

  const handleChange = async (e) => {
    const { files } = e.target
    const formData = new FormData()
    formData.append('dir', 'kv')
    formData.append('ref', stateAuth.user?.userId)
    formData.append('type', 'image')
    formData.append(0, files[0])

    try {
      setLogoUploading(true)
      const response = await upload(formData)
      console.log(response)
      setFileDoc(response?.path)
      setLogoUploading(false)
    } catch (error) {
      console.log(error)
      toast.error(
        error?.res?.data?.message || 'The was an error updating pitch deck',
      )
    }
  }


  stateAuth?.investorData

  amount: ""
  amountPerYear: ""
  angelInvestedBefore: false
  angelInvestorOrSyndicateInvestor: "solo"
  bankAccountNumber: ""
  bankAccountType: ""
  bankBranch: ""
  bankName: ""
  budgetAmount: ""
  budgetPerYear: ""
  individualHaving: ""
  interestedInOnlinePitching: false
  investingFrom: "personal fund"
  isLeadInvestor: false
  isPublic: false
  mentorsStartups: false
  nationality: ""
  numberOfInvestmentPerYear: ""
  previousAngelInvestingExperience: false
  sectorOfExpertise: ""
  taxResidentOutsideNigeria: false
  yetToInvest: false


  updateInvestorProfileData('profile', {
    referral: e.target.value,
  })

  brand: {valueProposition: "const validate = (obj, validations) =>    validatiâ€¦lit('.').reduce((acc, cur) => acc?.[cur], obj)));",
   competitiveAdvantage: "const validate = (obj, validations) =>    validatiâ€¦lit('.').reduce((acc, cur) => acc?.[cur], obj)));",
    productRoadMap: "const validate = (obj, validations) =>    validatiâ€¦lit('.').reduce((acc, cur) => acc?.[cur], obj)));",
     brandBuilding: "const validate = (obj, validations) =>    validatiâ€¦lit('.').reduce((acc, cur) => acc?.[cur], obj)));",
      brandValue: "const validate = (obj, validations) =>    validatiâ€¦lit('.').reduce((acc, cur) => acc?.[cur], obj)));", â€¦}
  businessModel: {channels: "const validate = (obj, validations) =>    validatiâ€¦lit('.').reduce((acc, cur) => acc?.[cur], obj)));",
   customerRelationship: "const validate = (obj, validations) =>    validatiâ€¦lit('.').reduce((acc, cur) => acc?.[cur], obj)));",
    revenueStreams: "const validate = (obj, validations) =>    validatiâ€¦lit('.').reduce((acc, cur) => acc?.[cur], obj)));",
     keyActivities: "const validate = (obj, validations) =>    validatiâ€¦lit('.').reduce((acc, cur) => acc?.[cur], obj)));", 
     keyResource: "const validate = (obj, validations) =>    validatiâ€¦lit('.').reduce((acc, cur) => acc?.[cur], obj)));", â€¦}
  market: {problemStatement: "const validate = (obj, validations) =>    validatiâ€¦lit('.').reduce((acc, cur) => acc?.[cur], obj)));", product: "const validate = (obj, validations) =>    validatiâ€¦lit('.').reduce((acc, cur) => acc?.[cur], obj)));", targetMarket: "const validate = (obj, validations) =>    validatiâ€¦lit('.').reduce((acc, cur) => acc?.[cur], obj)));", marketSize: "const validate = (obj, validations) =>    validatiâ€¦lit('.').reduce((acc, cur) => acc?.[cur], obj)));", keyCompetitors: "const validate = (obj, validations) =>    validatiâ€¦lit('.').reduce((acc, cur) => acc?.[cur], obj)));", â€¦}
  plan: {marketStrategy: "const validate = (obj, validations) => \n  validatiâ€¦lit('.').reduce((acc, cur) => acc?.[cur], obj)));", 
  salesStrategy: "const validate = (obj, validations) => \n  validatiâ€¦lit('.').reduce((acc, cur) => acc?.[cur], obj)));", _id: '6270fdfaad958f6a70f90b83'}
  _id: "6270fdfaad958f6a70f90b84"

[
  "brand.valueProposition",
  "brand.competitiveAdvantage",
  "brand.productRoadMap",
  "brand.brandBuilding",
  "brand.brandValue",
  "market.problemStatement",
  "market.product",
  "market.targetMarket",
  "market.marketSize",
  "market.keyCompetitors",
  "plan.marketStrategy",
  "plan.salesStrategy"
]

console.log({
  ...state,
  startupData:{
   ...state.startupData,
   [action.payload.property]:[
     ...state.startupData[action.payload.property],
     action.payload.value
   ] 
  }
})



======================================================================
===========================================================================
<Pagination>
          {events && events?.results?.currentPage > 1 ? (
            <>
              <Pagination.Prev onClick={prevPage} className="mx-1" />
              {
                <Pagination.Item className="mx-1">{`${currentPage} of  ${
                  events?.results?.limit ?? 1
                }`}</Pagination.Item>
              }
              {events?.results?.currentPage === events?.results?.limit ? (
                <span />
              ) : (
                <Pagination.Next onClick={nextPage} className="mx-1" />
              )}
            </>
          ) : (
            <>
              {
                <Pagination.Item
                  onClick={() => movePage(currentPage + 1)}
                  className="mx-1"
                >{`${currentPage} of  ${events?.results?.limit}`}</Pagination.Item>
              }

              {events &&
              events?.results?.currentPage === events?.results?.limit ? (
                <span />
              ) : (
                <Pagination.Next onClick={nextPage} className="mx-1" />
              )}
            </>
          )}
        </Pagination>


product: {description: null, competitiveEdge: null, youtubeDemoUrl: null, files: null, _id: '627c8417c62f67917c468efa'}
recommende
fundRaising:
capTable: {amountRaised: '', amountInvestedByFounders: '', files: Array(0), _id: '627c8417c62f67917c468efe'}
financialProjection: {files: null, _id: '627c8417c62f67917c468f00'}
fundUtilization: {files: Array(0), _id: '627c8417c62f67917c468efd'}
fundingAsk: {hasPreviousFundraising: false, description: '', instrumentForRound: '', numberOfRounds: '', fundraisingAmount: '', â€¦}
previousRound: {instrumentForRound: '', numberOfRounds: '', fundraisingAmount: '', dilution: '', preMoneyValuation: '', â€¦}
_id: "627c8417c6

pitchDeck:
pitchDeckFile: null
pitchDeckVideo: null
_id: "627c8

avatar: null
briefIntroduction: null
city: null
coFounder: []
country: null
dob: "2022-05-12T03:50:47.609Z"
education: []
email: null
experience: []
firstName: null
gender: null
isCofounder: false
lastName: null
mobile_number: null
skills: []
state: null

acceleratorName: ""
brand: ""
businessSector: ""
companySize: ""
elevatorPitch: ""
logo: null
registrationNumber: ""
startupStage: ""
yearFounded: "2022-05-12T03:50:47.601Z"
_id: "627c8417c62f67917c468ef7"
[[Prototype]]: Obje



competitiveEdge: null
description: null
files: null
youtubeDemoUrl: null
_id: "627

const handleChange = (e, prefix = "") => {
  const { name, value } = e.target;
  if (prefix !== "") {
    updateProfile("startUpProfile",{
      [prefix]: {
        ...stateAuth?.startupData?.startUpProfile[prefix],
        [name]: value,
      },
    });
    formik.handleChange(e);
    return;
  }
  updateProfile("startUpProfile", {[name]: value });
  console.log(stateAuth)
};




 
// eslint-disable-next-line react-hooks/rules-of-hooks
const formik = useFormik({
  initialValues: {
    startupName: stateAuth?.user?.businessname ?? "",
    elevatorPitch:
      stateAuth?.startupData?.startUpProfile?.elevatorPitch ?? "",
    brand: stateAuth?.startupData?.startUpProfile?.brand ?? "",
    registrationNumber:
      stateAuth?.startupData?.startUpProfile?.registrationNumber ?? "",
    companySize: stateAuth?.startupData?.startUpProfile?.companySize ?? "",
    businessSector:
      stateAuth?.startupData?.startUpProfile?.businessSector ?? "",
    startupStage: stateAuth?.startupData?.startUpProfile?.startupStage ?? "",
    acceleratorName:  
      stateAuth?.startupData?.startUpProfile?.acceleratorName ?? "",
    registeredAddress:
      stateAuth?.startupData?.startUpProfile?.contactInfo
        ?.registeredAddress ?? "",
   
    city: stateAuth?.startupData?.startUpProfile?.contactInfo?.city ?? "",
    companyEmail:
      stateAuth?.startupData?.startUpProfile?.contactInfo?.companyEmail ?? "",
    profileHandle:
      stateAuth?.startupData?.startUpProfile?.socialMedia?.profileHandle ??
      "",
    companyWebsite:
      stateAuth?.startupData?.startUpProfile?.socialMedia?.companyWebsite ??
      "",
    linkedInHandle:
      stateAuth?.startupData?.startUpProfile?.socialMedia?.linkedInHandle ??
      "",
    twitterHandle:
      stateAuth?.startupData?.startUpProfile?.socialMedia?.twitterHandle ??
      "",
  },
  validationSchema: Yup.object({
    elevatorPitch: Yup.string().required("This field is required"),
    brand: Yup.string().required("This field is required"),
    registrationNumber: Yup.number()
      .min(3)
      .required("This field is required"),
    companySize: Yup.string().required("This field is required"),
    businessSector: Yup.string().required("This field is required"),
    startupStage: Yup.string().required("This field is require"),
    acceleratorName: Yup.string().required("This field is required"),
    registeredAddress: Yup.string().required("This field is required"),
    city: Yup.string().required("This field is required"),
    companyEmail: Yup.string().email("Invalid email").required("Email Required"),
    companyWebsite: Yup.string().url().required("This field is required"),
    linkedInHandle: Yup.string().required("This field is required"),
    twitterHandle: Yup.string().required("This field is required"),
    startupName: Yup.string().required("This field is required"),
  })
});
   
const selectChange = (e) =>{
  const { value , name } = e.target;
  updateProfile("startUpProfile" ,{
    [name]: value,
  });
 
}  

================================================================
=======================================================================
const [amount, setAmount] = useState(
  stateAuth?.startupData?.fundRaising?.fundingAsk?.fundraisingAmount ?? '',
)
const [preMoney, setPreMoney] = useState(
  stateAuth?.startupData?.fundRaising?.fundingAsk?.preMoneyValuation ?? '',
)
const [postMoney, setPostMoney] = useState(
  stateAuth?.startupData?.fundRaising?.fundingAsk?.postMoneyValuation ?? '',
)

applicationCompleted: true
email: "jane@gmail.com"
firstname: "janeee"
investorApproach: {techSector: 'Consumer products and services', investmentExperience: 'I am an angel investor / high net worth individual making regular investments', investmentPreference: 'Marketplace', investmentThesis: '@gkeenley You have to update project.pbxproj by haâ€¦ade or any command line tools that help upgrading', stage: 'Pre-Seed', â€¦}
isRegCompleted: true
isTrash: false
lastname: "Mina"
password: "$2a$10$vPh6QRgPUg.T6gBk8Zrim.s2YFG2o2gi3/L5o6XeABdNYM9XPiJi."
permissions: []
personalDetail: {nationality: 'Nigeria', taxResidentOutsideNigeria: true, individualHaving: 'Business Owner', bankName: 'FCMB', bankBranch: 'Ikeja', â€¦}
phone: "+2348163394719"
portfolio: []
profile:
address: "Adeneyi"
avatar: "https://cdn.shoutng.com/kvdbjeggjsxz0fvetferok.png"
briefIntroduction: " If you run yarn remove [package] it will remove the package from node_modules and also from the yarn.lock file.  If you manually delete from package.json and then run yarn install, the deleted package is not installed and the yarn.lock file is not updated."
city: "Lagos"
companyEmail: ""
country: "Nigeria"
dob: "2022-05-19T01:05:33.389Z"
email: "brightbrain@gmail.com"
firstName: "Enerst"
howDidYouAboutUs: "social media"
lastName: "Owunbuzia"
mobile_number: "+376748848484444"
referral: "hjkkkkjh"
socialMedia: {linkedIn: 'http://localhost:3000/startup/registration', twitter: 'http://localhost:3000/boosterpartner/registration', website: 'http://localhost:3000/boosterpartner/registration', profileLink: '', _id: '628597dda32ef136e27d6aee'}
state: "Lagos"
_id: "628597dda32ef136e27d6aef"
[[Prototype]]: Object
type: ['investor']
userId: "628597dd1f0f5989e8619f7f"
verified: true
__v: 0


amount: ""
amountPerYear: ""
angelInvestedBefore: true
angelInvestedExperience: ""
angelInvestorOrSyndicateInvestor: "Syndicate"
bankAccountNumber: "99009868897"
bankAccountType: "Savings Account"
bankBranch: "Ikeja"
bankName: "FCMB"
budgetAmount: "88999"
budgetPerYear: "7899987766"
individualHaving: "Business Owner"
interestedInOnlinePitching: true
investingFrom: "Personal Fund"
investorType: "Corporation"
isLeadInvestor: true
isPublic: true
mentorsStartups: true
nationality: "Nigeria"
numberOfInvestmentPerYear: "90000"
previousAngelInvestingExperience: false
sectorOfExpertise: "Artificial intelligence"
taxResidentOutsideNigeria: true
yetToInvest: true


date: "2022-06-09T01:36:02.895Z"
description: "Thanks for this. Do you know if it's necessary to update project.pbxproj by hand? Or does updating all the other files cause project.pbxproj to get updated automatically? â€“ \ngkeenley\n Apr 10, 2020 at 2:38\n1\n@gkeenley You have to update project.pbxpro"
email: "isaackelvin256@gmail.com"
industry: "Engineering and Technology"
logo: "https://cdn.shoutng.com/kvc6jfxgwtm1uot8ewas7m.jpg"
partnerId: "628f2434c6914d79b69bc3b7"
phone: "+2348163394719"
startupId: "6283d2e21f0f5989e8619f56"
startupName: "Winner Airlines"
status: "APPROVED"


expired

APPROVED

DECLINED

PENDING




{/* {declined.length > 0 &&
                declined.map((item, i) => (
                    <ApplicationCard
                        key={i}
                        className="col-lg-4 col-12 col-md-6 mb-4"
                    >
                        <Modal id={`approved${i}`} withHeader={false}>
                            <ApprovedModal data={item} />
                        </Modal>
                        <div>
                            <img
                                className=""
                                src={item.logo}
                                alt="company logo"
                            />
                        </div>
                        <div className="my-2">
                            <h3> {item?.companyName} </h3>
                        </div>
                        <Tag
                            name="Analytics"
                            bg="#F5FFDE"
                            color="#05C118"
                            fz="12px"
                        />
                        <div className="my-3">
                            <p>
                                {data?.companyDescription}
                                <span
                                    data-target={`#approved${i}`}
                                    data-toggle="modal"
                                >
                                    Read More
                                </span>
                            </p>
                        </div>
                        <div>
                            <button className="declinedBtn mt-2">
                                <img
                                    className="mr-2 mb-1"
                                    src={cancel}
                                    alt="declined icon"
                                />
                                Declined
                            </button>
                        </div>
                    </ApplicationCard>
                ))} */}

 {/* {pending.length > 0 &&
                pending.map((item, i) => {
                    console.log(item);
                    return (
                        <ApplicationCard
                            key={i}
                            className="col-lg-4 col-12 col-md-6 mb-4"
                        >
                            <Modal id={`approved${i}`} withHeader={false}>
                                <ApprovedModal data={item} />
                            </Modal>
                            <div>
                                <img
                                    className=""
                                    src={item.logo}
                                    alt="company logo"
                                />
                            </div>
                            <div className="my-2">
                                <h3> {item?.companyName} </h3>
                            </div>
                            <Tag
                                name="Analytics"
                                bg="#F5FFDE"
                                color="#05C118"
                                fz="12px"
                            />
                            <div className="my-3">
                                <p>
                                    {data?.companyDescription}
                                    <span
                                        data-target={`#approved${i}`}
                                        data-toggle="modal"
                                    >
                                        Read More
                                    </span>
                                </p>
                            </div>
                            <div>
                                <button className="declinedBtn mt-2">
                                    <img
                                        className="mr-2 mb-1"
                                        src={cancel}
                                        alt="declined icon"
                                    />
                                    Declined
                                </button>
                            </div>
                        </ApplicationCard>
                    );
                })} */}


                const ApplyModal = () => {
                  return (
                      <div className="applyModal px-4">
                          <section className="pt-2">
                              <button
                                  type="button"
                                  className="close close-founder-modal px-4 py-2"
                                  data-dismiss="modal"
                                  aria-label="Close"
                              >
                                  <span aria-hidden="true">&times;</span>
                              </button>
                          </section>
              
                          <div className="mt-5">
                              {compImage.map((comp, i) => (
                                  <img
                                      className=""
                                      key={i}
                                      src={comp.logo}
                                      alt="company logo"
                                  />
                              ))}
                          </div>
                          <div className="mt-3 d-flex justify-content-between">
                              {cardDataModal.map((data, i) => (
                                  <div>
                                      <h3 key={i}>{data.header}</h3>
                                  </div>
                              ))}
                              <h6 className="mt-2">flutter.co</h6>
                          </div>
                          <div className="mb-4">
                              <Tag
                                  className=""
                                  name="Analytics"
                                  bg="#F5FFDE"
                                  color="#05C118"
                                  fz="12px"
                              />
                          </div>
                          <div className="">
                              {compdetailModal.map((data, i) => (
                                  <div>
                                      <p key={i}>{data.detail}</p>
                                  </div>
                              ))}
                          </div>
                          <div className="border-bottom pb-4">
                              {cardDataModal.map((data, i) => (
                                  <div>
                                      <h4 className="mt-5 mb-3">{data.subtitle}</h4>
                                      <p key={i}>{data.body}</p>
                                  </div>
                              ))}
                          </div>
                          <div className="d-flex justify-content-between my-5">
                              <button className="applyModalback">Back</button>
                              <button className="applyModalapply">Apply</button>
                          </div>
                      </div>
                  );
              };

//Approved Modal
const ApprovedModal = ({ data = {} }) => {
  return (
      <div className="applyModal px-4">
          <section className="pt-2">
              <button
                  type="button"
                  className="close close-founder-modal px-4"
                  data-dismiss="modal"
                  aria-label="Close"
              >
                  <span aria-hidden="true">&times;</span>
              </button>
          </section>

          <div className="mt-5">
              {compImage.map((comp, i) => (
                  <img
                      className=""
                      key={i}
                      src={comp.logo}
                      alt="company logo"
                  />
              ))}
          </div>
          <div className="mt-3 d-flex justify-content-between">
              <div>
                  <h3>{data.name}</h3>
              </div>
              <h6 className="mt-2">flutter.co</h6>
          </div>
          <div className="mb-4">
              <Tag name="Analytics" bg="#F5FFDE" color="#05C118" fz="12px" />
          </div>
          <div className="">
              <div>
                  <p>{data.description}</p>
              </div>
          </div>
          <div className="mt-5">
              {Map.map((approved, i) => (
                  <div>
                      <h2>{approved.title}</h2>

                      <div className="text-center">
                          <img
                              className="w-75"
                              key={i}
                              src={approved.approvedMap}
                              alt="applied map"
                          />
                          <div className="d-flex justify-content-around">
                              <span className="appliedGreen">Applied</span>
                              <span className="appliedBlur">Approved</span>
                              <span className="appliedBlur">Success</span>
                          </div>
                      </div>
                  </div>
              ))}
          </div>
          <div></div>
          <div className="border-bottom pb-4">
              {cardDataModal.map((data, i) => (
                  <div>
                      <h4 className="mt-5 mb-3">{data.subtitle}</h4>
                      <p key={i}>{data.body}</p>
                  </div>
              ))}
          </div>

          <div className="d-flex justify-content-between my-5">
              <button className="applyModalback">Back</button>
              <div>
                  {/* <button className="cancelApp">Cancel Application</button> */}
                  <button
                      className={`${data?.status}Btn mt-2`}
                      disabled={data?.status === "applied"}
                  >
                      {data?.status === "approved" && (
                          <img
                              className="mr-2 mb-1"
                              src={approved}
                              alt="approved icon"
                          />
                      )}
                      {data?.status === "declined"
                          ? "Re-apply"
                          : data?.status}
                  </button>
              </div>
          </div>
      </div>
  );
};

//Declined Modal
const DeclinedModal = () => {
  return (
      <div className="applyModal px-4">
          <section className="pt-2">
              <button
                  type="button"
                  className="close close-founder-modal px-4"
                  data-dismiss="modal"
                  aria-label="Close"
              >
                  <span aria-hidden="true">&times;</span>
              </button>
          </section>

          <div className="mt-5">
              {compImage.map((comp, i) => (
                  <img
                      className=""
                      key={i}
                      src={comp.logo}
                      alt="company logo"
                  />
              ))}
          </div>
          <div className="mt-3 d-flex justify-content-between">
              {cardDataModal.map((data, i) => (
                  <div>
                      <h3 key={i}>{data.header}</h3>
                  </div>
              ))}
              <h6 className="mt-2">flutter.co</h6>
          </div>
          <div className="mb-4">
              <Tag
                  name="Cloud Computing"
                  bg="#DEF6FF"
                  color="#058DC1"
                  fz="12px"
              />
          </div>
          <div className="">
              {compdetailModal.map((data, i) => (
                  <div>
                      <p key={i}>{data.detail}</p>
                  </div>
              ))}
          </div>
          <div className="mt-5">
              {Map.map((declined, i) => (
                  <div>
                      <h2>{declined.title}</h2>

                      <div className="text-center">
                          <img
                              className="w-75"
                              key={i}
                              src={declined.declinedMap}
                              alt="applied map"
                          />
                          <div className="d-flex justify-content-around">
                              <span className="appliedGreen">Applied</span>
                              <span className="appliedBlur">Approved</span>
                              <span className="appliedBlur">Success</span>
                          </div>
                      </div>
                  </div>
              ))}
          </div>
          <div></div>
          <div className="border-bottom pb-4">
              {cardDataModal.map((data, i) => (
                  <div>
                      <h4 className="mt-5 mb-3">{data.subtitle}</h4>
                      <p key={i}>{data.body}</p>
                  </div>
              ))}
          </div>

          <div className="d-flex justify-content-between my-5">
              <button className="applyModalback">Back</button>
              <button className="reapplyBtn mt-2 me-2">Re-Apply</button>
          </div>
      </div>
  );
};

declinedBtn
cancelApp



attendees: (2) [{â€¦}, {â€¦}]
description: "In publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before the final copy is available."
duration: "5"
endTime: "2022-05-13T16:00:00.000Z"
guest: {profileId: '628cea9ae13f0600a1621a68', name: 'chief', email: 'ertyu@gmail.com', logo: 'https://cdn.shoutng.com/kv8hshfq95wje0vprrcxkb.png'}
joinWith: "https://meet.google.com/mer-thuh-cqr?pli=1&authuser=1"
notifyMe: "20"
sector: "Finance"
startTime: "2022-05-13T11:00:00.000Z"
topic: "Meeting with peter Obi"
__v: 0




email: "isaackelvin256@gmail.com"
logo: "https://cdn.shoutng.com/kv8hshfq95wje0vprrcxkb.png"
name: "Winner Airlines"
profileId: "6283d2e21f0f5989e8619f56"
_id: "62a75db127050020f6


email: "ertyu@gmail.com"
logo: "https://cdn.shoutng.com/kv8hshfq95wje0vprrcxkb.png"
name: "chief"
profileId: "628cea9ae13f0600a1621a68"
[[Prototype]]









































































































































































































































email: "isaackelvin256@gmail.com"
industry: "Engineering and Technology"
isRegCompleted: true
password: "$2a$10$VFZe49DGrNdpKd1YSjzqrOAHFjOw55sKazp7tmOSCt.W0oyT0Q0hi"
permissions: []
phone: "+2348163394719"
startupname: "Winner Airlines"
type: ['startup']
verified: true




























