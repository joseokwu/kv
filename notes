// Validation for Antd
    {
        type: name,
        message: name === 'email' ?`Please input a correct ${name}`: '' ,
      },
      ===========================================================
      =========================================================
onClick={() => {
            push("#offerings");
          }}

  ================================================
  =================================================
  everthing about the side BAR 
  ------------------------------------------

import React, { useEffect, useState } from "react";
import "./sidebar.css";
import { useHistory } from "react-router";
import user from "../../assets/images/sampleUserSide.png";
import dashboard from "../../assets/icons/dashboard.svg";
import startup from "../../assets/icons/startupApplicants.svg";
import event from "../../assets/icons/eventIcon.svg";
import helpDesk from "../../assets/icons/helpDesk.svg";
import { startUpRoutes } from "../../constants/sidebarRoutes";

const investorNavigators = [
  {
    title: "Dashboard",
    activator: "dashboard",
    path: "/investor/dashboard",
    icon: dashboard,
  },
  {
    title: "Investment Opportunities",
    activator: "opportunities",
    path: "/investor/opportunities",
    icon: startup,
  },
  {
    title: "Events",
    activator: "events",
    path: "/investor/events",
    icon: event,
  },
];

const boosterNavigators = [
  {
    title: "Dashboard",
    activator: "dashboard",
    path: "/dashboard",
    icon: dashboard,
  },
  {
    title: "Startup Applicants",
    activator: "applicants",
    path: "/applicants",
    icon: startup,
  },
];

export const Sidebar = () => {
  const {
    location: { pathname },
    push,
  } = useHistory();

  const activateLink = (path) => {
    return pathname.includes(path) ? "active-side" : "";
  };

  const [navigator, setNavigator] = useState([]);

  useEffect(() => {
    if (pathname.includes("investor")) {
      setNavigator(investorNavigators);
    } else {
      setNavigator(boosterNavigators);
    }
  }, [pathname]);

  console.log(`navigator`, navigator);

  return (
    <div className="side-main">
      <section className="side-navigator">
        <div>
          <img src={user} alt="profile" />
        </div>
        <h5 className="mb-0 side-header">Hello Micheal Smith</h5>
        <p className="mb-0 side-text">
          {pathname.includes("investor") ? "Investor" : "Partner"}
        </p>

        <ul className="side-list">
          {navigator.length > 0 &&
            navigator.map((nav, i) => {
              return (
                <li>
                  <a href={nav.path}>
                    <img src={nav.icon} alt="dash" />
                    <p className={`${activateLink(nav.activator)} side-text`}>
                      {nav.title}
                    </p>
                  </a>
                </li>
              );
            })}
        </ul>
      </section>
      <section className="side-footer" onClick={() => push("/support")}>
        <img src={helpDesk} alt="help" />
        <p className="mb-0 side-text" role="button">
          Need help? Contact us
        </p>
      </section>
    </div>
  );
};





export const StartupSideBar = () => {
  const {
    location: { pathname },
    push,
  } = useHistory();

  const [pathState, setPathState] = useState(0)

  const activateLink = (path) => {
    return pathname.includes(path) ? "active-side-start" : "side-text-start";
  };

  const [navigator, setNavigator] = useState([]);

  useEffect(() => {
    if (pathname.includes("investor")) {
      setNavigator(investorNavigators);
    } else {
      setNavigator(boosterNavigators);
    }
  }, [pathname]);

  console.log(`navigator`, navigator);

  return (
    <div className="start-main">
      <section className="side-navigator">
      

        <ul className="side-list-start">
          {navigator.length > 0 &&
            startUpRoutes.map((nav, i) => {
              return (
                <li>
                  <a href={nav.path}>
                  
                    <p className={`${activateLink(nav.activator)} side-text-start`}>
                      {nav.title}
                    </p>
                  </a>
                </li>
              );
            })}
        </ul>
      </section>

    </div>
  );
};
=============================================================
==========================================================
ends here
=======================================================



export const startUpRoutes = [
  {

    title: "Startup Profile",
    activator: "startup",
    path: "/startupRegistration",
    
  },
  {
    title: "Pitch Deck",
    activator: "pitchdeck",
    path: "/startupRegistration/pitchdeck",
  
  },
  {
    title: "Team",
    activator: "team",
    path: "/startupRegistration/team",
  
  },
  {
      title: "Product",
      activator: "product",
      path: "/startupRegistration/product",
    
    },
    {
      title: "Fundraising",
      activator: "fundraising",
      path: "/startupRegistration/fundraising",
    
    },
    {
      title: "Milestones",
      activator: "milestones",
      path: "/startupRegistration/milestones",
    
    },
];

Domi data ends
===========================================================
==============================================
?? `https://ui-avatars.com/api/?name=${business?.name}`

===================================================================

===================================================================


<Modal show={show} onHide={handleClose}>
<Modal.Header   closeButton>
  <Modal.Title className='tit' > {title} </Modal.Title>
</Modal.Header>
<Modal.Body>
    { children }
</Modal.Body>

</Modal>


======================================================
=======================================================
{
  skill.map(item =>{
      return <Option key={item}>{item}</Option>
  })
}

==================================================================
=================================================================
{ icon: newApp, name: "new", count: 12, color: "#FAD7DC" },
{ icon: pending, name: "pending", count: 5, color: "#DFF1FF" },
{ icon: approved, name: "approved", count: 60, color: "#EEDAFB" },
{ icon: expired, name: "expired", count: 10, color: "#E5FFE4" },
{ icon: reApplied, name: "Re-Applied", count: 20, color: "#FDE591" },

==================================================================
====================================================================
<section className="row mt-5 dash-main-content">
<div className="col-lg-6">
  <header className="d-flex align-items-center justify-content-between dashboard-applications-header">
    <h5>New Applications</h5>
    <span>See All</span>
  </header>

  <section>
    {appCardData.map((data, i) => (
      <div style={{ marginBottom: 21 }}>
        <ApplicationCard logo={applicantLogo} key={i} />
      </div>
    ))}
  </section>
</div>
<div className="col-lg-6 mt-5">
  <ApplicationChart />
</div>
</section>
=============================================
==============================================
case '#Fund Utilization':
  return  <FundUtilization />;
  case '#Cap Table':
    return <CapTable />;
  case '#Previous Round':
    return <PreviousRound /> ;
    case '#Financial Projection':
      return <FinancialProjection /> ;

====================================================
==========================================================
<section className="d-flex align-items-center appChart-label">
<LabelCheck color="#2196F3" />
<p className="label-name">Expired</p>
<p className="label-percent">25%</p>
</section>

================================================
=============================================

function for making a download work 

const downloadStatement = () => {
  const element = document.querySelector('#account');
  
  let opt = {
    margin: 1,
    filename:'template.pdf',
    image: { type: 'jpeg', quality: 0.98 },
    html2canvas: { scale: 2 },
    jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' },
    };
  
    //console.log(html2pdf().from(element).set(opt).save())
  
    return  html2pdf().from(element).set(opt).save();
  

  }

=================================================================
===================================================================
<div className=" col-lg-6 col-12">
<div className="div p-5">
  <img src={RedFile} alt=".#" />
</div>
<div id="div" className="p-2">
  <div className="d-flex mt-n2">
    <img
      src={BlueFile}
      alt=".#"
      style={{ width: '10%', height: '10%' }}
      className="mt-3"
    />
    <p
      className=""
      style={{ marginLeft: '0.2rem', fontSize: '0.9rem' }}
    >
      Product Demo
    </p>
  </div>
  <p className="my-n2 p">2.5 mb</p>
</div>
</div>







        <div className=" col-lg-6 col-12">
                      <div className="div p-5">
                        <img src={RedFile} alt=".#" />
                      </div>
                      <div id="div" className="p-2">
                        <div className="d-flex mt-n2">
                          <img
                            src={BlueFile}
                            alt=".#"
                            style={{ width: '10%', height: '10%' }}
                            className="mt-3"
                          />
                          <p
                            className=""
                            style={{ marginLeft: '0.2rem', fontSize: '0.9rem' }}
                          >
                            Product Demo
                          </p>
                        </div>
                        <p className="my-n2 p">2.5 mb</p>
                      </div>
                    </div>
===============================================================
{cardData.map((data, i) => (
  <>
    <DashCard
      className="col-lg-3 col-md-6 col-12"
      icon={data.icon}
      name={data.name}
      count={data.count}
      color={data.color}
      key={i}
    />
  </>
))}

===========================================
founders: "20"
investors: "30"
mentors: "20"
partners: "10"
=================================================================
"postMoney":"7,000,000",
            "fundAsk":{
            "requirement":[
             "$100,000",
            "Common Equity",
            "Seed",
            "10%",
            "$20,000",
            "$30,000",
            "20 November, 2021",
            ],
            "committment":[
            {
              "investor": "Prima Juma Umbe",
              "investType": "Angel Investor",
              "amnt": "$100,000",
              "ledInvest": "Yes",
            },
            {
              "investor":"John Juma Umbe",
              "investType": "Angel Investor",
              "amnt": "$120,000",
              "ledInvest":"No",
            },
            {
              "investor": "Kim saje",
              "investType": "Angel Investor",
              "amnt": "$20,000",
              "ledInvest": "No",
            },
            {
              "investor": "shaun ken",
              "investType": "Angel Investor",
              "amnt": "$5,000",
              "ledInvest": "Yes",
            },
            {
              "investor": "kassy franee",
              "investType": "Angel Investor",
              "amnt": "$40,000",
              "ledInvest":"No",
            },
            {
              "investor": "Leo jimmy",
              "investType": "Angel Investor",
              "amnt": "$900,000",
              "ledInvest": "Yes",
            },
                ]
               },
               "fundUtilization":[
               
                           {
                  "head": "Revenue",
                  "month1": "$200,000",
                  "month2": "$25, 000",
                  "month3": "$200, 000",
                  "month4": "$200,000",
                  "month5": "$300,000",
                  "month6": "$200,000",
                },
                {
                 " head": "Growth %",
                  "month1": "",
                  "month2": "",
                  "month3": "",
                  "month4": "",
                  "month5": "",
                  "month6": "",
                },
                {
                  "head": "Expenses",
                  "month1": "$200,000",
                  "month2": "$25, 000",
                  "month3": "$200, 000",
                  "month4": "$200,000",
                  "month5": "$300,000",
                  "month6": "$200,000",
                },
                     {
                  "head": "Burn Rate",
                  "month1": "$200,000",
                  "month2": "$125, 000",
                  "month3": "$230, 000",
                  "month4": "$45,000",
                  "month5": "$31,000",
                  "month6": "$24,220",
                },
                 {
                  "head": "Runway Months",
                  "month1": "$200,000",
                  "month2": "$125, 000",
                  "month3": "$230, 000",
                  "month4": "$45,000",
                  "month5": "$31,000",
                  "month6": "$24,220",
                },
        
               ],
                 "capTable":[
                    {
                  "shareHolders": "John Carter Robinson",
                  "shareType": "Angel Investor",
                  "noShare": "5",
                  "sharePercent": "2.5 %",
                },
                   {
                  "shareHolders": "John Carter Robinson",
                  "shareType": "Angel Investor",
                  "noShare": "5",
                  "sharePercent": "2.5 %",
                },
                   {
                  "shareHolders": "John Carter Robinson",
                  "shareType": "Angel Investor",
                  "noShare": "5",
                  "sharePercent": "2.5 %",
                },
                   {
                  "shareHolders": "John Carter Robinson",
                  "shareType": "Angel Investor",
                  "noShare": "5",
                  "sharePercent": "2.5 %",
                },
                   {
                  "shareHolders": "John Carter Robinson",
                  "shareType": "Angel Investor",
                  "noShare": "5",
                  "sharePercent": "2.5 %",
                },
                   {
                  "shareHolders": "John Carter Robinson",
                  "shareType": "Angel Investor",
                  "noShare": "5",
                  "sharePercent": "2.5 %",
                },
                   {
                  "shareHolders": "",
                  "shareType": "Total",
                  "noShare": "",
                  "sharePercent": "%",
                },
                 ],
                 "previousRound":[
                        {
                      "invest": "James Parker",
                     "fundDate": "20 November 2021",
                      "dealType": "Common Equity",
                      "fundRound": "Seed",
                      "investAmnt": "$30,000",
                      "dilution": "20 %",
                      "preMoney": "$5, 000",
                      "pstMoney": "$10, 000",
                    },
                    {
                  "invest": "James Parker",
                 "fundDate": "20 November 2021",
                  "dealType": "Common Equity",
                  "fundRound": "Seed",
                  "investAmnt": "$30,000",
                  "dilution": "20 %",
                  "preMoney": "$5, 000",
                  "pstMoney": "$10, 000",
                },
                {
                  "invest": "James Parker",
                 "fundDate": "20 November 2021",
                  "dealType": "Common Equity",
                  "fundRound": "Pres-Series A",
                  "investAmnt": "$30,000",
                  "dilution": "20 %",
                  "preMoney": "$5, 000",
                  "pstMoney": "$10, 000",
                },
                {
                  "invest": "James Parker",
                 "fundDate": "20 November 2021",
                  "dealType": "Debt Financing",
                  "fundRound": "Series A",
                  "investAmnt": "$30,000",
                  "dilution": "20 %",
                  "preMoney": "$5, 000",
                  "pstMoney": "$10, 000",
                },
                 ]

===============================================================
"foundersCapitial":"100,000",
"totalFund":"300,000",
"preMoney":"400,000",
"postMoney":"7,000,000",
"fundAsk":{
"requirement":[
 "$100,000",
"Common Equity",
"Seed",
"10%",
"$20,000",
"$30,000",
"20 November, 2021"
],
"committment":[
{
  "investor": "Prima Juma Umbe",
  "investType": "Angel Investor",
  "amnt": "$100,000",
  "ledInvest": "Yes"
},
{
  "investor":"John Juma Umbe",
  "investType": "Angel Investor",
  "amnt": "$120,000",
  "ledInvest":"No"
},
{
  "investor": "Kim saje",
  "investType": "Angel Investor",
  "amnt": "$20,000",
  "ledInvest": "No"
},
{
  "investor": "shaun ken",
  "investType": "Angel Investor",
  "amnt": "$5,000",
  "ledInvest": "Yes"
},
{
  "investor": "kassy franee",
  "investType": "Angel Investor",
  "amnt": "$40,000",
  "ledInvest":"No"
},
{
  "investor": "Leo jimmy",
  "investType": "Angel Investor",
  "amnt": "$900,000",
  "ledInvest": "Yes"
}
    ]
},
"fundUtilization":[
   
{
  "head": "Revenue",
  "month1": "$200,000",
  "month2": "$25, 000",
  "month3": "$200, 000",
  "month4": "$200,000",
  "month5": "$300,000",
  "month6": "$200,000"
},
{
 " head": "Growth %",
  "month1": "",
  "month2": "",
  "month3": "",
  "month4": "",
  "month5": "",
  "month6": ""
},
{
  "head": "Expenses",
  "month1": "$200,000",
  "month2": "$25, 000",
  "month3": "$200, 000",
  "month4": "$200,000",
  "month5": "$300,000",
  "month6": "$200,000"
},
     {
  "head": "Burn Rate",
  "month1": "$200,000",
  "month2": "$125, 000",
  "month3": "$230, 000",
  "month4": "$45,000",
  "month5": "$31,000",
  "month6": "$24,220"
},
 {
  "head": "Runway Months",
  "month1": "$200,000",
  "month2": "$125, 000",
  "month3": "$230, 000",
  "month4": "$45,000",
  "month5": "$31,000",
  "month6": "$24,220"
}
],
"capTable":[

{
  "shareHolders": "John Carter Robinson",
  "shareType": "Angel Investor",
  "noShare": "5",
  "sharePercent": "2.5 %"
},
   {
  "shareHolders": "John Carter Robinson",
  "shareType": "Angel Investor",
  "noShare": "5",
  "sharePercent": "2.5 %"
},
   {
  "shareHolders": "John Carter Robinson",
  "shareType": "Angel Investor",
  "noShare": "5",
  "sharePercent": "2.5 %"
},
   {
  "shareHolders": "John Carter Robinson",
  "shareType": "Angel Investor",
  "noShare": "5",
  "sharePercent": "2.5 %"
},
   {
  "shareHolders": "John Carter Robinson",
  "shareType": "Angel Investor",
  "noShare": "5",
  "sharePercent": "2.5 %"
},
   {
  "shareHolders": "John Carter Robinson",
  "shareType": "Angel Investor",
  "noShare": "5",
  "sharePercent": "2.5 %"
},
   {
  "shareHolders": "",
  "shareType": "Total",
  "noShare": "",
  "sharePercent": "%"
}
 ],
 "previousRound":[
        {
      "invest": "James Parker",
     "fundDate": "20 November 2021",
      "dealType": "Common Equity",
      "fundRound": "Seed",
      "investAmnt": "$30,000",
      "dilution": "20 %",
      "preMoney": "$5, 000",
      "pstMoney": "$10, 000"
    },
    {
  "invest": "James Parker",
 "fundDate": "20 November 2021",
  "dealType": "Common Equity",
  "fundRound": "Seed",
  "investAmnt": "$30,000",
  "dilution": "20 %",
  "preMoney": "$5, 000",
  "pstMoney": "$10, 000"
},
{
  "invest": "James Parker",
 "fundDate": "20 November 2021",
  "dealType": "Common Equity",
  "fundRound": "Pres-Series A",
  "investAmnt": "$30,000",
  "dilution": "20 %",
  "preMoney": "$5, 000",
  "pstMoney": "$10, 000"
},
{
  "invest": "James Parker",
 "fundDate": "20 November 2021",
  "dealType": "Debt Financing",
  "fundRound": "Series A",
  "investAmnt": "$30,000",
  "dilution": "20 %",
  "preMoney": "$5, 000",
  "pstMoney": "$10, 000"
}
 ]

 {appliedArr.map((i) => (
  <ApplicationCard key={i} className="col-lg-4 col-12 col-md-6 mb-4">
    <div>
      {compImage.map((comp, i) => (
        <img className="" key={i} src={comp.logo} alt="company logo" />
      ))}
    </div>
    <div className="my-2">
      {applicationCardData.map((data, i) => (
        <h3 key={i}>{data.title}</h3>
      ))}
    </div>
    <Tag name="Bike Rental" bg="#EDDEFF" color="#1405C1" fz="12px" />
    <div className="my-3">
      {applicationCardData.map((data, i) => (
        <p key={i}>
          {data.content}
          <span data-target="#applied" data-toggle="modal">
            Read More
          </span>
        </p>
      ))}
    </div>
    <button className="appliedBtn mt-2">Applied</button>
  </ApplicationCard>
))}



  {/* Expired Modal starts here */}
  <Modal id="expired" withHeader={false}>
  <ExpiredModal />
</Modal>
{/* Expired Modal end here */}

{/* Expired Card */}
{expiredArr.map((i) => (
  <ApplicationCard key={i} className="col-lg-4 col-12 col-md-6 mb-4">
    <div>
      {compImage.map((comp, i) => (
        <img className="" key={i} src={comp.logo} alt="company logo" />
      ))}
    </div>
    <div className="my-2">
      {applicationCardData.map((data, i) => (
        <h3 key={i}>{data.title}</h3>
      ))}
    </div>
    <Tag name="Customer Support" bg="#FFFCDE" color="#C17605" fz="12px" />
    <div className="my-3">
      {applicationCardData.map((data, i) => (
        <p key={i}>
          {data.content}
          <span data-target="#expired" data-toggle="modal">
            Read More
          </span>
        </p>
      ))}
    </div>
    <button className="expiredBtn mt-2">
      <img className="mr-2 mb-1" src={expired} alt="expired icon" />
      Expired
    </button>
  </ApplicationCard>
))}

{/* Declined Modal starts here  */}
<Modal id="declined" withHeader={false}>
  <DeclinedModal />
</Modal>
{/* Declined Modal end here */}

{/* Declined Card */}



 {/* Applied Modal starts here */}
 <Modal id="applied" withHeader={false}>
 <AppliedModal />
</Modal>
{/* Applied Modal end here */}

{/* Applied Card */}


{applyArr.map((i) => (
  <ApplicationCard key={i} className="col-lg-4 col-12 col-md-6 mb-4">
    <div>
      {compImage.map((comp, i) => (
        <img className="" key={i} src={comp.logo} alt="company logo" />
      ))}
    </div>
    <div className="my-2">
      {applicationCardData.map((data, i) => (
        <h3 key={i}>{data.title}</h3>
      ))}
    </div>
    <Tag name="Analytics" bg="#F5FFDE" color="#05C118" fz="12px" />
    <div className="my-3">
      {applicationCardData.map((data, i) => (
        <p key={i}>
          {data.content}
          <span>Read More</span>
        </p>
      ))}
    </div>
    <button className="applyBtn mt-2">Apply</button>
  </ApplicationCard>
))}
=====================================================================
=======================================================

<div className="col-xl-6 mb-4">
<OpportunityCard
  onClick={() => push(`/investor/opportunities/1`)}
/>
</div>
<div className="col-xl-6 mb-4">
<OpportunityCard
  onClick={() => push(`/investor/opportunities/2`)}
/>
</div>
<div className="col-xl-6 mb-4">
<OpportunityCard
  onClick={() => push(`/investor/opportunities/3`)}
/>
</div>
<div className="col-xl-6 mb-4">
<OpportunityCard
  onClick={() => push(`/investor/opportunities/4`)}
/>
</div>

===========================================
<Tag name="Tech" />
<Tag name="Engineering" color="#40439A" />
<Tag name="Career" color="#E31937" />
=============================================================
           "file":"",
             "name":"Financial Projection",
             "size":"20mb"
  
return (
  <section style={{ overflow: "auto" }}>
    <table
     className="table table-striped"
    >
      <thead>
        <tr style={{ background: "#f8f8fa", color:"#a3a3a3"}} >
         {
           columns.map((item, i) =>(
            
          
          <th key={i} > {item?.Header}</th>
        
           
           ))
         }
         </tr>
      </thead>
      <tbody>
      <tr >
        {data && data.map((row, i) => {
          
          return (
             
            <td> { row } </td>
              
          );

        })}
        </tr>
      </tbody>
    </table>
  </section>
);
};

===============================================================
==========================================================
import React from "react";
import dots from "../../../assets/icons/3dots.svg";
import bigClock from "../../../assets/icons/bigclock.svg";
import demo from "../../../assets/images/vidDemo.svg";
import doc from "../../../assets/images/doc.svg";
import { Button, Modal, Select, TextField } from "../../../Startupcomponents";
import down from "../../../assets/icons/downArrow.svg";
import location from "../../../assets/icons/locationSm.svg";
import name from "../../../assets/icons/initial.svg";
import { months } from "../../../utils/helpers";
import { ExceptionMap } from "antd/lib/result";

export const SelectionDay = ({data}) => {

  console.log(data)

  const dte = new Date();

  return (
    <div className="row" style={{ columnGap: 10 }}>
      <Modal id="eventScheduleModal" withHeader={false}>
        <EventScheduleModal />
      </Modal>
    
    {

      data && data.map((item, i) =>{
        let compareDate = new Date(item?.startTime)
        let endTime = new Date(item?.endTime) 
        return (

<div key={i} className={`col-lg-5 col-12   events_card_bg py-4 mt-4 ml-lg-4 px-4`}>
<section className="events_card d-flex justify-content-between">
<h3> { item?.titleOfEvent } </h3>
{/* <img src={dots} alt="" /> */}
</section>

<section className="d-flex justify-content-between mt-2">
<p className="pending_date pr-4">
<span>{ compareDate.getDate() } </span> <em className="mx-2" >{months[compareDate.getMonth()] }</em>
</p>

<p className="pending_time pt-1">
 { dte.getDate() === compareDate.getDate() ? ( <span class="accepted_tag">Ongoing</span>) : (<> <img src={bigClock} alt="clock" /> { `${compareDate.getHours()}:00${compareDate.getHours() >= 12 ? 'PM' : 'AM'} ` + "-" +  `${endTime.getHours()}:00${endTime.getHours() >=12 ? 'PM' : 'AM'} ` }  </> ) }
</p>
</section>

<section className="mt-4">
{  item?.image ? (<img
src={item?.image}
alt="demo"
style={{ width: "100%", height: "100%" }}
/>) : <span/> }
</section>

<section className="event_card_body mt-5">
<p>
  {
    item?.eventDescription
  }
</p>
</section>

{
 dte.getHours() === compareDate.getHours() ? (
  <section
  className="d-flex align-items-center justify-content-between mt-3 event_card_footer flex-wrap"
  style={{ rowGap: 10 }}
>
  <div
    className="d-flex align-items-center"
    style={{ columnGap: 10 }}
  >
    <button className="se_join">Join Event</button>
    <button className="se_view">View details</button>
  </div>

  <section className="event_people">
    <img src={doc} alt="doc" />
    <img src={doc} alt="doc" />
    <img src={doc} alt="doc" />
  </section>
</section>
  ):(
  <section
className="d-flex align-items-center justify-content-between mt-3 event_card_footer flex-wrap"
style={{ rowGap: 10 }}
>
<div className="d-flex align-items-center" style={{ columnGap: 10 }}>
<button className="se_view">View details</button>

</div>

<section className="event_people">
<img src={doc} alt="doc" />
<img src={doc} alt="doc" />
<img src={doc} alt="doc" />
</section>
</section>
 )

}
 
</div> 
        )
       
      })
      
    }

    </div>
  );  
};

const EventScheduleModal = () => {
  return (
    <div className="px-4 pb-5">
      <section className="pt-2">
        <button
          type="button"
          class="close close-founder-modal"
          data-dismiss="modal"
          aria-label="Close"
        >
          {/* <img className="pr-2" src={pen} alt="edit" />
          <img className="pr-2" src={trash} alt="trash" /> */}
          <span aria-hidden="true">&times;</span>
        </button>
      </section>

      <section className="mt-2">
        <p className="" style={{ color: "#E21919" }}>
          2 days : 30mins : 05 secs
        </p>

        <section className="d-flex program_modal_head mt-4">
          <h3 className="pr-3">Appleiine House Demo</h3>
          <p className="pt-2">Host: Applean Industry</p>
        </section>

        <section className="d-flex mt-3">
          <p className="pending_date pr-5">
            <span>50</span> | September
          </p>

          <p className="pending_time pt-1">
            <img src={bigClock} alt="clock" /> 10:00pm - 12pm
          </p>
        </section>

        <section className="event_schedule_modal_desc mt-5 p-4">
          <h4 className="pb-3">Description</h4>
          <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Enim lectus
            morbi elementum eu.Lorem ipsum dolor sit amet, consectetur
            adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing
            elit. Enim lectus morbi elementum eu.Lorem ipsum dolor sit amet,
            consectetur adipiscing elit.{" "}
          </p>
        </section>

        <section className="event_schedule_visibility mt-4 mb-3">
          <p>
            Visibility : <span>Public</span> <img src={down} alt="down arrow" />
          </p>
        </section>

        <section className="mb-3">
          <button className="back-btn">Join Event</button>
        </section>

        <section className="event_link">
          <a href="https://www.yebox.io/" target="_blank">
            <img className="pr-3" src={location} alt="location" />{" "}
            meet.google.com/jce-wata-fux
          </a>
        </section>

        <section className="mt-5">
          <p>Attendees</p>
          <div className="d-flex mt-4">
            <p className="pr-5">
              <img className="pr-3" src={name} alt="initial" /> Micheal Smith
            </p>
            <p className="pl-5">
              <img className="pr-3" src={name} alt="initial" /> Micheal Smith
            </p>
          </div>

          <div className="d-flex mt-4">
            <p className="pr-5">
              <img className="pr-3" src={name} alt="initial" /> Micheal Smith
            </p>
            <p className="pl-5">
              <img className="pr-3" src={name} alt="initial" /> Micheal Smith
            </p>
          </div>
        </section>

        <section className="event_schedule_availability mt-5">
          <p>Availability</p>
          <div className="mt-3 mb-4">
            <button className="mr-3">Yes</button>
            <button className="mr-3">No</button>
            <button className="mr-4">Maybe</button>
            <span>
              Request to reschedule{" "}
              <img className="pl-2" src={down} alt="arrow down" />
            </span>
          </div>
        </section>

        <section className="mt-5">
          <TextField label={"Day"} placeholder={"Thursday 17th Oct 2021"} />
        </section>

        <section className="row mt-5">
          <div className="col-lg-5">
            <Select label={"Start time"} placeholder={"Time"} />
          </div>
          <div className="col-lg-5">
            <Select label={"End time"} placeholder={"Time"} />
          </div>
        </section>

        <section className="send_request mt-5">
          <a href="#!">Send Request</a>
        </section>

        <section className="mt-5 event_card_footer">
          <a href="#!">Add to schedule</a>
        </section>
      </section>
    </div>
  );
};

==============================================================
==========================================================



"values":{
  "logo":"https://www.w3schools.com/js/tryit.asp?filename=tryjs_date_current",
  "elevatorPitch":"jane",
  "startupName":"male",
  "yearFounded":"Sat Mar 26 2022 15:59:18 GMT+0100 (West Africa Standard Time)",
  "regisrationNumber":"90876655",
  "companySize":"jane9038",
  "businessSector":"twine.io",
  "startupStage":"ganeee",
  "acceleratorName":"yeuwiw",
  "contactInfo":{
      "registeredAddress":"address",
      "country":"nigeria",
      "state":"Lagos",
      "city":"merian",
      "phoneNumber":"903948392",
      "companyEmail":"yuiiiytu@gmail.com"
  },
  "socialMedia":{
      "profileHandle":"handle",
      "companyWebsite":"https://www.w3schools.com/js/tryit.asp?filename=tryjs_date_current",
      "linkedInHandle":"https://www.w3schools.com/js/tryit.asp?filename=tryjs_date_current",
      "twitterHandle":"https://www.w3schools.com/js/tryit.asp?filename=tryjs_date_current"
  }
  "type":"startUpProfile",
  "accType":"startup",
},

onClick={() => history.push('/startup/dashboard')}

{/* 
              <CustomSelect
                name={'businessSector'}
                options={options}
                value={formik.values.businessSector}
                onChange={(value) =>
                  (value) => formik.setFieldValue('startupStage', value.value)
                }
                className="cust"
              /> */}

              <CustomSelect
              name={'startupStage'}
              options={stage}
              value={formik.values.startupStage}
              onChange={(value) => formik.setFieldValue('startupStage', value.value)}
              className="cust"
            />

<CustomSelect
                name='companySize'
                options={optionsNumb}
                value={formik.values.companySize}
                onChange={
                  formik.handleChange
                }
                className="cust"
              />

ssignments: {data: Array(0), results: {…}}
businessname: "Winner Airlines"
event: {data: Array(0), results: {…}}
fundRaising: {fundingAsk: {…}, fundUtilization: {…}, capTable: {…}, previousRound: {…}, financialProjection: {…}, …}
industry: "Agriculture, food and beverages"
partner: []
pitchDeck: {pitchDeckFile: 'https://cdn.shoutng.com/kvbwocvo7jglftace6ywn9.pdf', pitchDeckVideo: 'https://cdn.shoutng.com/kvmsavkgxsxmxtbhxmiwsm.mp4', _id: '6257502352859a2f60e570c2'}
product: {description: 'ewwreredsdEdssf', competitiveEdge: 'sarrewrrerrrrr', youtubeDemoUrl: Array(2), files: null, _id: '6257557752859a2f60e57164'}
role: ['startup']
startUpProfile:
acceleratorName: "zee world"
brand: "wqwqqwerrr"
businessSector: "sdffsff"
companySize: "325535"
contactInfo: {registeredAddress: 'Adeneyi', country: 'Nigeria', state: 'Lagos', city: 'Lagos', phoneNumber: '+2348165796896', …}
elevatorPitch: "qwerrrwrrrr"
logo: "https://cdn.shoutng.com/kvkhwym84u5gzhccppfste.jpg"
registrationNumber: "6889990088"
socialMedia: {profileHandle: 'https://www.w3schools.com/js/tryit.asp?filename=tryjs_date_current', companyWebsite: 'https://www.w3schools.com/js/tryit.asp?filename=tryjs_date_current', linkedInHandle: 'https://www.w3schools.com/js/tryit.asp?filename=tryjs_date_current', twitterHandle: 'https://www.w3schools.com/js/tryit.asp?filename=tryjs_date_current', _id: '62574ffc52859a2f60e570bc'}
startupName: "Winner Airlines"
startupStage: "sfFFff"
yearFounded: "2011-04-10"
_id: "62574ffc52859a2f60e570ba"
[[Prototype]]: Object
team: {avatar: 'https://cdn.shoutng.com/kvtpldo4iqzoa0ebnlhtfd.png', briefIntroduction: 'Hellooooo', firstName: 'Enerst', lastName: 'Owunbuzia', email: 'brightbrain@gmail.com', …}
userId: "62574f45fae1602d2abaf0c8"
__v: 0


assignments: {data: Array(1), results: {…}}
businessname: "Winner Airlines"
email: "isaackelvin256@gmail.com"
event: {data: Array(0), results: {…}}
fundRaising: {fundingAsk: {…}, fundUtilization: {…}, capTable: {…}, previousRound: {…}, financialProjection: {…}, …}
industry: "Agriculture, food and beverages"
isRegCompleted: true
partner: []
permissions: []
phone: "+2340987768998"
pitchDeck: {pitchDeckFile: 'https://cdn.shoutng.com/kvdptg0en56hzuo5tti0lu.pdf', pitchDeckVideo: 'https://cdn.shoutng.com/kvm2q4ifvxn1ikr7qb7hc6.mp4', _id: '625930305af52b0b6724f975'}
product: {description: 'In publishing and graphic design, Lorem ipsum is a…a placeholder before the final copy is available.', competitiveEdge: 'In publishing and graphic design, Lorem ipsum is a…a placeholder before the final copy is available.', youtubeDemoUrl: Array(1), files: null, _id: '62594027b36d0dd3b5e2e3ac'}
role: ['startup']
startUpProfile: {logo: 'https://cdn.shoutng.com/kv304nexraqfgbwbnfuxpe.jpg', elevatorPitch: 'In publishing and graphic design, Lorem ipsum is a…a placeholder before the final copy is available.', brand: 'Brand', startupName: 'Winner Airlines', yearFounded: '2017-04-09', …}
startupname: "Winner Airlines"
team: {avatar: 'https://cdn.shoutng.com/kvlyknlq810h4lxzagidxw.png', briefIntroduction: 'Hellooooo', firstName: 'Enerst', lastName: 'Owunbuzia', email: 'isaackelvin256@gmail.com', …}
type: ['startup']
userId: "62585391a5101dc3e84a7c72"
verified: tru 



"value":{
  "startupId":"62401b6c823102897a328985",
  "startupName":"Bisi business card",
  "description":"we sell rice",
  "logo":"www.logo.com"
},
  "userId":"6246bcb64d65461c8b2756cf"


  approvedRequests: []
categories: "Tech"
city: "exxi"
companyDescription: "WE sell bread"
companyEmail: "dhhdjd@gmail.com"
companyLogo: "https://cdn.shoutng.com/kvkhwym84u5gzhccppfste.jpg"
companyName: "bulee Sea"
coordinatorName: "ziikoo"
country: "Nigeria"
declinedRequests: []
designation: "hdhdammnnkf"
industry: "Tech"
linkedin: "www.link.com"
offerings: {offerings: 'bread service', eligibilityCriteria: 'Eligibility', importantNote: 'hddjjfkkd', process: 'dhhdjjsjhd', partnershipValidity: 'gdhhfdhf', …}
pendingRequests: []
phoneNumber: "ryhhdjd"
state: "imo"
twitter: "www.twitt.com"
userId: "6246bcb64d65461c8b2756cf"
website: "http://web.com"


approvedRequests: []
categories: "Tech"
city: "exxi"
companyDescription: "WE sell bread"
companyEmail: "dhhdjd.gmail.com"
companyLogo: "http://google.com"
companyName: "bulee"
coordinatorName: "ziikoo"
country: "Nigeria"
declinedRequests: []
designation: "hdhdjfkf"
industry: "Tech"
linkedin: "www.link.com"
offerings: {eligibilityCriteria: 'Eligibility', importantNote: 'hddjjfkkd', process: 'dhhdjjsjhd', partnershipValidity: 'gdhhfdhf', turnAroundTime: 'gdhhfyeyyr', …}
pendingRequests: [{…}]
phoneNumber: "hhjdkdd"
state: "imo"
twitter: "www.twitt.com"
userId: "6246bc

) : item?.status === "declined" ? (
  <button className="declinedBtn mt-2">
    <img className="mr-2 mb-1" src={cancel} alt="declined icon" />
    Declined
  </button>
) : item?.status === "applied" ? (
  <button className="expiredBtn mt-2">
    <img className="mr-2 mb-1" src={expired} alt="expired icon" />
    Expired
  </button>





















 // const onNumberOnlyChange = (e) => {
  //   const keyCode = e.keyCode || e.which
  //   const keyValue = String.fromCharCode(keyCode)
  //   const isValid = new RegExp('[0-9]').test(keyValue)
  //   if (!isValid) {
  //     e.preventDefault()
  //     return
  //   }
  // }

  const handleChange = async(e) => {

    const { files, name } = e.target;
    const formData = new FormData();
    formData.append("dir", "kv");
    formData.append("ref", stateAuth.user?.userId);
    formData.append("type", "image");
    formData.append(0 , files[0])

    try {
      setLogoUploading(true);
      const response = await upload(formData)
      console.log(response) 
      setFileDoc(response?.path)
      setLogoUploading(false)

    } catch(error) {
      console.log(error)
      toast.error(error?.res?.data?.message || 'The was an error updating pitch deck');
    }

  }
  const handleChange = async(e) => {

    const { files, name } = e.target;
    const formData = new FormData();
    formData.append("dir", "kv");
    formData.append("ref", stateAuth.user?.userId);
    formData.append("type", "image");
    formData.append(0 , files[0])

    try {
      setLogoUploading(true);
      const response = await upload(formData)
      console.log(response) 
      setFileDoc(response?.path)
      setLogoUploading(false)

    } catch(error) {
      console.log(error)
      toast.error(error?.res?.data?.message || 'The was an error updating pitch deck');
    }

  }





































































