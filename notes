// Validation for Antd
    {
        type: name,
        message: name === 'email' ?`Please input a correct ${name}`: '' ,
      },
      ===========================================================
      =========================================================
onClick={() => {
            push("#offerings");
          }}

  ================================================
  =================================================
  everthing about the side BAR 
  ------------------------------------------

import React, { useEffect, useState } from "react";
import "./sidebar.css";
import { useHistory } from "react-router";
import user from "../../assets/images/sampleUserSide.png";
import dashboard from "../../assets/icons/dashboard.svg";
import startup from "../../assets/icons/startupApplicants.svg";
import event from "../../assets/icons/eventIcon.svg";
import helpDesk from "../../assets/icons/helpDesk.svg";
import { startUpRoutes } from "../../constants/sidebarRoutes";

const investorNavigators = [
  {
    title: "Dashboard",
    activator: "dashboard",
    path: "/investor/dashboard",
    icon: dashboard,
  },
  {
    title: "Investment Opportunities",
    activator: "opportunities",
    path: "/investor/opportunities",
    icon: startup,
  },
  {
    title: "Events",
    activator: "events",
    path: "/investor/events",
    icon: event,
  },
];

const boosterNavigators = [
  {
    title: "Dashboard",
    activator: "dashboard",
    path: "/dashboard",
    icon: dashboard,
  },
  {
    title: "Startup Applicants",
    activator: "applicants",
    path: "/applicants",
    icon: startup,
  },
];

export const Sidebar = () => {
  const {
    location: { pathname },
    push,
  } = useHistory();

  const activateLink = (path) => {
    return pathname.includes(path) ? "active-side" : "";
  };

  const [navigator, setNavigator] = useState([]);

  useEffect(() => {
    if (pathname.includes("investor")) {
      setNavigator(investorNavigators);
    } else {
      setNavigator(boosterNavigators);
    }
  }, [pathname]);

  console.log(`navigator`, navigator);

  return (
    <div className="side-main">
      <section className="side-navigator">
        <div>
          <img src={user} alt="profile" />
        </div>
        <h5 className="mb-0 side-header">Hello Micheal Smith</h5>
        <p className="mb-0 side-text">
          {pathname.includes("investor") ? "Investor" : "Partner"}
        </p>

        <ul className="side-list">
          {navigator.length > 0 &&
            navigator.map((nav, i) => {
              return (
                <li>
                  <a href={nav.path}>
                    <img src={nav.icon} alt="dash" />
                    <p className={`${activateLink(nav.activator)} side-text`}>
                      {nav.title}
                    </p>
                  </a>
                </li>
              );
            })}
        </ul>
      </section>
      <section className="side-footer" onClick={() => push("/support")}>
        <img src={helpDesk} alt="help" />
        <p className="mb-0 side-text" role="button">
          Need help? Contact us
        </p>
      </section>
    </div>
  );
};





export const StartupSideBar = () => {
  const {
    location: { pathname },
    push,
  } = useHistory();

  const [pathState, setPathState] = useState(0)

  const activateLink = (path) => {
    return pathname.includes(path) ? "active-side-start" : "side-text-start";
  };

  const [navigator, setNavigator] = useState([]);

  useEffect(() => {
    if (pathname.includes("investor")) {
      setNavigator(investorNavigators);
    } else {
      setNavigator(boosterNavigators);
    }
  }, [pathname]);

  console.log(`navigator`, navigator);

  return (
    <div className="start-main">
      <section className="side-navigator">
      

        <ul className="side-list-start">
          {navigator.length > 0 &&
            startUpRoutes.map((nav, i) => {
              return (
                <li>
                  <a href={nav.path}>
                  
                    <p className={`${activateLink(nav.activator)} side-text-start`}>
                      {nav.title}
                    </p>
                  </a>
                </li>
              );
            })}
        </ul>
      </section>

    </div>
  );
};
=============================================================
==========================================================
ends here
=======================================================



export const startUpRoutes = [
  {

    title: "Startup Profile",
    activator: "startup",
    path: "/startupRegistration",
    
  },
  {
    title: "Pitch Deck",
    activator: "pitchdeck",
    path: "/startupRegistration/pitchdeck",
  
  },
  {
    title: "Team",
    activator: "team",
    path: "/startupRegistration/team",
  
  },
  {
      title: "Product",
      activator: "product",
      path: "/startupRegistration/product",
    
    },
    {
      title: "Fundraising",
      activator: "fundraising",
      path: "/startupRegistration/fundraising",
    
    },
    {
      title: "Milestones",
      activator: "milestones",
      path: "/startupRegistration/milestones",
    
    },
];

Domi data ends
===========================================================
==============================================
?? `https://ui-avatars.com/api/?name=${business?.name}`

===================================================================

===================================================================


<Modal show={show} onHide={handleClose}>
<Modal.Header   closeButton>
  <Modal.Title className='tit' > {title} </Modal.Title>
</Modal.Header>
<Modal.Body>
    { children }
</Modal.Body>

</Modal>


======================================================
=======================================================
{
  skill.map(item =>{
      return <Option key={item}>{item}</Option>
  })
}

==================================================================
=================================================================
{ icon: newApp, name: "new", count: 12, color: "#FAD7DC" },
{ icon: pending, name: "pending", count: 5, color: "#DFF1FF" },
{ icon: approved, name: "approved", count: 60, color: "#EEDAFB" },
{ icon: expired, name: "expired", count: 10, color: "#E5FFE4" },
{ icon: reApplied, name: "Re-Applied", count: 20, color: "#FDE591" },

==================================================================
====================================================================
<section className="row mt-5 dash-main-content">
<div className="col-lg-6">
  <header className="d-flex align-items-center justify-content-between dashboard-applications-header">
    <h5>New Applications</h5>
    <span>See All</span>
  </header>

  <section>
    {appCardData.map((data, i) => (
      <div style={{ marginBottom: 21 }}>
        <ApplicationCard logo={applicantLogo} key={i} />
      </div>
    ))}
  </section>
</div>
<div className="col-lg-6 mt-5">
  <ApplicationChart />
</div>
</section>
=============================================
==============================================
case '#Fund Utilization':
  return  <FundUtilization />;
  case '#Cap Table':
    return <CapTable />;
  case '#Previous Round':
    return <PreviousRound /> ;
    case '#Financial Projection':
      return <FinancialProjection /> ;

====================================================
==========================================================
<section className="d-flex align-items-center appChart-label">
<LabelCheck color="#2196F3" />
<p className="label-name">Expired</p>
<p className="label-percent">25%</p>
</section>

================================================
=============================================

function for making a download work 

const downloadStatement = () => {
  const element = document.querySelector('#account');
  
  let opt = {
    margin: 1,
    filename:'template.pdf',
    image: { type: 'jpeg', quality: 0.98 },
    html2canvas: { scale: 2 },
    jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' },
    };
  
    //console.log(html2pdf().from(element).set(opt).save())
  
    return  html2pdf().from(element).set(opt).save();
  

  }

=================================================================
===================================================================
<div className=" col-lg-6 col-12">
<div className="div p-5">
  <img src={RedFile} alt=".#" />
</div>
<div id="div" className="p-2">
  <div className="d-flex mt-n2">
    <img
      src={BlueFile}
      alt=".#"
      style={{ width: '10%', height: '10%' }}
      className="mt-3"
    />
    <p
      className=""
      style={{ marginLeft: '0.2rem', fontSize: '0.9rem' }}
    >
      Product Demo
    </p>
  </div>
  <p className="my-n2 p">2.5 mb</p>
</div>
</div>







        <div className=" col-lg-6 col-12">
                      <div className="div p-5">
                        <img src={RedFile} alt=".#" />
                      </div>
                      <div id="div" className="p-2">
                        <div className="d-flex mt-n2">
                          <img
                            src={BlueFile}
                            alt=".#"
                            style={{ width: '10%', height: '10%' }}
                            className="mt-3"
                          />
                          <p
                            className=""
                            style={{ marginLeft: '0.2rem', fontSize: '0.9rem' }}
                          >
                            Product Demo
                          </p>
                        </div>
                        <p className="my-n2 p">2.5 mb</p>
                      </div>
                    </div>
===============================================================
{cardData.map((data, i) => (
  <>
    <DashCard
      className="col-lg-3 col-md-6 col-12"
      icon={data.icon}
      name={data.name}
      count={data.count}
      color={data.color}
      key={i}
    />
  </>
))}

===========================================
founders: "20"
investors: "30"
mentors: "20"
partners: "10"
=================================================================
"postMoney":"7,000,000",
            "fundAsk":{
            "requirement":[
             "$100,000",
            "Common Equity",
            "Seed",
            "10%",
            "$20,000",
            "$30,000",
            "20 November, 2021",
            ],
            "committment":[
            {
              "investor": "Prima Juma Umbe",
              "investType": "Angel Investor",
              "amnt": "$100,000",
              "ledInvest": "Yes",
            },
            {
              "investor":"John Juma Umbe",
              "investType": "Angel Investor",
              "amnt": "$120,000",
              "ledInvest":"No",
            },
            {
              "investor": "Kim saje",
              "investType": "Angel Investor",
              "amnt": "$20,000",
              "ledInvest": "No",
            },
            {
              "investor": "shaun ken",
              "investType": "Angel Investor",
              "amnt": "$5,000",
              "ledInvest": "Yes",
            },
            {
              "investor": "kassy franee",
              "investType": "Angel Investor",
              "amnt": "$40,000",
              "ledInvest":"No",
            },
            {
              "investor": "Leo jimmy",
              "investType": "Angel Investor",
              "amnt": "$900,000",
              "ledInvest": "Yes",
            },
                ]
               },
               "fundUtilization":[
               
                           {
                  "head": "Revenue",
                  "month1": "$200,000",
                  "month2": "$25, 000",
                  "month3": "$200, 000",
                  "month4": "$200,000",
                  "month5": "$300,000",
                  "month6": "$200,000",
                },
                {
                 " head": "Growth %",
                  "month1": "",
                  "month2": "",
                  "month3": "",
                  "month4": "",
                  "month5": "",
                  "month6": "",
                },
                {
                  "head": "Expenses",
                  "month1": "$200,000",
                  "month2": "$25, 000",
                  "month3": "$200, 000",
                  "month4": "$200,000",
                  "month5": "$300,000",
                  "month6": "$200,000",
                },
                     {
                  "head": "Burn Rate",
                  "month1": "$200,000",
                  "month2": "$125, 000",
                  "month3": "$230, 000",
                  "month4": "$45,000",
                  "month5": "$31,000",
                  "month6": "$24,220",
                },
                 {
                  "head": "Runway Months",
                  "month1": "$200,000",
                  "month2": "$125, 000",
                  "month3": "$230, 000",
                  "month4": "$45,000",
                  "month5": "$31,000",
                  "month6": "$24,220",
                },
        
               ],
                 "capTable":[
                    {
                  "shareHolders": "John Carter Robinson",
                  "shareType": "Angel Investor",
                  "noShare": "5",
                  "sharePercent": "2.5 %",
                },
                   {
                  "shareHolders": "John Carter Robinson",
                  "shareType": "Angel Investor",
                  "noShare": "5",
                  "sharePercent": "2.5 %",
                },
                   {
                  "shareHolders": "John Carter Robinson",
                  "shareType": "Angel Investor",
                  "noShare": "5",
                  "sharePercent": "2.5 %",
                },
                   {
                  "shareHolders": "John Carter Robinson",
                  "shareType": "Angel Investor",
                  "noShare": "5",
                  "sharePercent": "2.5 %",
                },
                   {
                  "shareHolders": "John Carter Robinson",
                  "shareType": "Angel Investor",
                  "noShare": "5",
                  "sharePercent": "2.5 %",
                },
                   {
                  "shareHolders": "John Carter Robinson",
                  "shareType": "Angel Investor",
                  "noShare": "5",
                  "sharePercent": "2.5 %",
                },
                   {
                  "shareHolders": "",
                  "shareType": "Total",
                  "noShare": "",
                  "sharePercent": "%",
                },
                 ],
                 "previousRound":[
                        {
                      "invest": "James Parker",
                     "fundDate": "20 November 2021",
                      "dealType": "Common Equity",
                      "fundRound": "Seed",
                      "investAmnt": "$30,000",
                      "dilution": "20 %",
                      "preMoney": "$5, 000",
                      "pstMoney": "$10, 000",
                    },
                    {
                  "invest": "James Parker",
                 "fundDate": "20 November 2021",
                  "dealType": "Common Equity",
                  "fundRound": "Seed",
                  "investAmnt": "$30,000",
                  "dilution": "20 %",
                  "preMoney": "$5, 000",
                  "pstMoney": "$10, 000",
                },
                {
                  "invest": "James Parker",
                 "fundDate": "20 November 2021",
                  "dealType": "Common Equity",
                  "fundRound": "Pres-Series A",
                  "investAmnt": "$30,000",
                  "dilution": "20 %",
                  "preMoney": "$5, 000",
                  "pstMoney": "$10, 000",
                },
                {
                  "invest": "James Parker",
                 "fundDate": "20 November 2021",
                  "dealType": "Debt Financing",
                  "fundRound": "Series A",
                  "investAmnt": "$30,000",
                  "dilution": "20 %",
                  "preMoney": "$5, 000",
                  "pstMoney": "$10, 000",
                },
                 ]

===============================================================
"foundersCapitial":"100,000",
"totalFund":"300,000",
"preMoney":"400,000",
"postMoney":"7,000,000",
"fundAsk":{
"requirement":[
 "$100,000",
"Common Equity",
"Seed",
"10%",
"$20,000",
"$30,000",
"20 November, 2021"
],
"committment":[
{
  "investor": "Prima Juma Umbe",
  "investType": "Angel Investor",
  "amnt": "$100,000",
  "ledInvest": "Yes"
},
{
  "investor":"John Juma Umbe",
  "investType": "Angel Investor",
  "amnt": "$120,000",
  "ledInvest":"No"
},
{
  "investor": "Kim saje",
  "investType": "Angel Investor",
  "amnt": "$20,000",
  "ledInvest": "No"
},
{
  "investor": "shaun ken",
  "investType": "Angel Investor",
  "amnt": "$5,000",
  "ledInvest": "Yes"
},
{
  "investor": "kassy franee",
  "investType": "Angel Investor",
  "amnt": "$40,000",
  "ledInvest":"No"
},
{
  "investor": "Leo jimmy",
  "investType": "Angel Investor",
  "amnt": "$900,000",
  "ledInvest": "Yes"
}
    ]
},
"fundUtilization":[
   
{
  "head": "Revenue",
  "month1": "$200,000",
  "month2": "$25, 000",
  "month3": "$200, 000",
  "month4": "$200,000",
  "month5": "$300,000",
  "month6": "$200,000"
},
{
 " head": "Growth %",
  "month1": "",
  "month2": "",
  "month3": "",
  "month4": "",
  "month5": "",
  "month6": ""
},
{
  "head": "Expenses",
  "month1": "$200,000",
  "month2": "$25, 000",
  "month3": "$200, 000",
  "month4": "$200,000",
  "month5": "$300,000",
  "month6": "$200,000"
},
     {
  "head": "Burn Rate",
  "month1": "$200,000",
  "month2": "$125, 000",
  "month3": "$230, 000",
  "month4": "$45,000",
  "month5": "$31,000",
  "month6": "$24,220"
},
 {
  "head": "Runway Months",
  "month1": "$200,000",
  "month2": "$125, 000",
  "month3": "$230, 000",
  "month4": "$45,000",
  "month5": "$31,000",
  "month6": "$24,220"
}
],
"capTable":[

{
  "shareHolders": "John Carter Robinson",
  "shareType": "Angel Investor",
  "noShare": "5",
  "sharePercent": "2.5 %"
},
   {
  "shareHolders": "John Carter Robinson",
  "shareType": "Angel Investor",
  "noShare": "5",
  "sharePercent": "2.5 %"
},
   {
  "shareHolders": "John Carter Robinson",
  "shareType": "Angel Investor",
  "noShare": "5",
  "sharePercent": "2.5 %"
},
   {
  "shareHolders": "John Carter Robinson",
  "shareType": "Angel Investor",
  "noShare": "5",
  "sharePercent": "2.5 %"
},
   {
  "shareHolders": "John Carter Robinson",
  "shareType": "Angel Investor",
  "noShare": "5",
  "sharePercent": "2.5 %"
},
   {
  "shareHolders": "John Carter Robinson",
  "shareType": "Angel Investor",
  "noShare": "5",
  "sharePercent": "2.5 %"
},
   {
  "shareHolders": "",
  "shareType": "Total",
  "noShare": "",
  "sharePercent": "%"
}
 ],
 "previousRound":[
        {
      "invest": "James Parker",
     "fundDate": "20 November 2021",
      "dealType": "Common Equity",
      "fundRound": "Seed",
      "investAmnt": "$30,000",
      "dilution": "20 %",
      "preMoney": "$5, 000",
      "pstMoney": "$10, 000"
    },
    {
  "invest": "James Parker",
 "fundDate": "20 November 2021",
  "dealType": "Common Equity",
  "fundRound": "Seed",
  "investAmnt": "$30,000",
  "dilution": "20 %",
  "preMoney": "$5, 000",
  "pstMoney": "$10, 000"
},
{
  "invest": "James Parker",
 "fundDate": "20 November 2021",
  "dealType": "Common Equity",
  "fundRound": "Pres-Series A",
  "investAmnt": "$30,000",
  "dilution": "20 %",
  "preMoney": "$5, 000",
  "pstMoney": "$10, 000"
},
{
  "invest": "James Parker",
 "fundDate": "20 November 2021",
  "dealType": "Debt Financing",
  "fundRound": "Series A",
  "investAmnt": "$30,000",
  "dilution": "20 %",
  "preMoney": "$5, 000",
  "pstMoney": "$10, 000"
}
 ]

 {appliedArr.map((i) => (
  <ApplicationCard key={i} className="col-lg-4 col-12 col-md-6 mb-4">
    <div>
      {compImage.map((comp, i) => (
        <img className="" key={i} src={comp.logo} alt="company logo" />
      ))}
    </div>
    <div className="my-2">
      {applicationCardData.map((data, i) => (
        <h3 key={i}>{data.title}</h3>
      ))}
    </div>
    <Tag name="Bike Rental" bg="#EDDEFF" color="#1405C1" fz="12px" />
    <div className="my-3">
      {applicationCardData.map((data, i) => (
        <p key={i}>
          {data.content}
          <span data-target="#applied" data-toggle="modal">
            Read More
          </span>
        </p>
      ))}
    </div>
    <button className="appliedBtn mt-2">Applied</button>
  </ApplicationCard>
))}



  {/* Expired Modal starts here */}
  <Modal id="expired" withHeader={false}>
  <ExpiredModal />
</Modal>
{/* Expired Modal end here */}

{/* Expired Card */}
{expiredArr.map((i) => (
  <ApplicationCard key={i} className="col-lg-4 col-12 col-md-6 mb-4">
    <div>
      {compImage.map((comp, i) => (
        <img className="" key={i} src={comp.logo} alt="company logo" />
      ))}
    </div>
    <div className="my-2">
      {applicationCardData.map((data, i) => (
        <h3 key={i}>{data.title}</h3>
      ))}
    </div>
    <Tag name="Customer Support" bg="#FFFCDE" color="#C17605" fz="12px" />
    <div className="my-3">
      {applicationCardData.map((data, i) => (
        <p key={i}>
          {data.content}
          <span data-target="#expired" data-toggle="modal">
            Read More
          </span>
        </p>
      ))}
    </div>
    <button className="expiredBtn mt-2">
      <img className="mr-2 mb-1" src={expired} alt="expired icon" />
      Expired
    </button>
  </ApplicationCard>
))}

{/* Declined Modal starts here  */}
<Modal id="declined" withHeader={false}>
  <DeclinedModal />
</Modal>
{/* Declined Modal end here */}

{/* Declined Card */}



 {/* Applied Modal starts here */}
 <Modal id="applied" withHeader={false}>
 <AppliedModal />
</Modal>
{/* Applied Modal end here */}

{/* Applied Card */}


{applyArr.map((i) => (
  <ApplicationCard key={i} className="col-lg-4 col-12 col-md-6 mb-4">
    <div>
      {compImage.map((comp, i) => (
        <img className="" key={i} src={comp.logo} alt="company logo" />
      ))}
    </div>
    <div className="my-2">
      {applicationCardData.map((data, i) => (
        <h3 key={i}>{data.title}</h3>
      ))}
    </div>
    <Tag name="Analytics" bg="#F5FFDE" color="#05C118" fz="12px" />
    <div className="my-3">
      {applicationCardData.map((data, i) => (
        <p key={i}>
          {data.content}
          <span>Read More</span>
        </p>
      ))}
    </div>
    <button className="applyBtn mt-2">Apply</button>
  </ApplicationCard>
))}
=====================================================================
=======================================================

<div className="col-xl-6 mb-4">
<OpportunityCard
  onClick={() => push(`/investor/opportunities/1`)}
/>
</div>
<div className="col-xl-6 mb-4">
<OpportunityCard
  onClick={() => push(`/investor/opportunities/2`)}
/>
</div>
<div className="col-xl-6 mb-4">
<OpportunityCard
  onClick={() => push(`/investor/opportunities/3`)}
/>
</div>
<div className="col-xl-6 mb-4">
<OpportunityCard
  onClick={() => push(`/investor/opportunities/4`)}
/>
</div>

===========================================
<Tag name="Tech" />
<Tag name="Engineering" color="#40439A" />
<Tag name="Career" color="#E31937" />
=============================================================
           "file":"",
             "name":"Financial Projection",
             "size":"20mb"
  
return (
  <section style={{ overflow: "auto" }}>
    <table
     className="table table-striped"
    >
      <thead>
        <tr style={{ background: "#f8f8fa", color:"#a3a3a3"}} >
         {
           columns.map((item, i) =>(
            
          
          <th key={i} > {item?.Header}</th>
        
           
           ))
         }
         </tr>
      </thead>
      <tbody>
      <tr >
        {data && data.map((row, i) => {
          
          return (
             
            <td> { row } </td>
              
          );

        })}
        </tr>
      </tbody>
    </table>
  </section>
);
};

===============================================================
==========================================================
import React from "react";
import dots from "../../../assets/icons/3dots.svg";
import bigClock from "../../../assets/icons/bigclock.svg";
import demo from "../../../assets/images/vidDemo.svg";
import doc from "../../../assets/images/doc.svg";
import { Button, Modal, Select, TextField } from "../../../Startupcomponents";
import down from "../../../assets/icons/downArrow.svg";
import location from "../../../assets/icons/locationSm.svg";
import name from "../../../assets/icons/initial.svg";
import { months } from "../../../utils/helpers";
import { ExceptionMap } from "antd/lib/result";

export const SelectionDay = ({data}) => {

  console.log(data)

  const dte = new Date();

  return (
    <div className="row" style={{ columnGap: 10 }}>
      <Modal id="eventScheduleModal" withHeader={false}>
        <EventScheduleModal />
      </Modal>
    
    {

      data && data.map((item, i) =>{
        let compareDate = new Date(item?.startTime)
        let endTime = new Date(item?.endTime) 
        return (

<div key={i} className={`col-lg-5 col-12   events_card_bg py-4 mt-4 ml-lg-4 px-4`}>
<section className="events_card d-flex justify-content-between">
<h3> { item?.titleOfEvent } </h3>
{/* <img src={dots} alt="" /> */}
</section>

<section className="d-flex justify-content-between mt-2">
<p className="pending_date pr-4">
<span>{ compareDate.getDate() } </span> <em className="mx-2" >{months[compareDate.getMonth()] }</em>
</p>

<p className="pending_time pt-1">
 { dte.getDate() === compareDate.getDate() ? ( <span class="accepted_tag">Ongoing</span>) : (<> <img src={bigClock} alt="clock" /> { `${compareDate.getHours()}:00${compareDate.getHours() >= 12 ? 'PM' : 'AM'} ` + "-" +  `${endTime.getHours()}:00${endTime.getHours() >=12 ? 'PM' : 'AM'} ` }  </> ) }
</p>
</section>

<section className="mt-4">
{  item?.image ? (<img
src={item?.image}
alt="demo"
style={{ width: "100%", height: "100%" }}
/>) : <span/> }
</section>

<section className="event_card_body mt-5">
<p>
  {
    item?.eventDescription
  }
</p>
</section>

{
 dte.getHours() === compareDate.getHours() ? (
  <section
  className="d-flex align-items-center justify-content-between mt-3 event_card_footer flex-wrap"
  style={{ rowGap: 10 }}
>
  <div
    className="d-flex align-items-center"
    style={{ columnGap: 10 }}
  >
    <button className="se_join">Join Event</button>
    <button className="se_view">View details</button>
  </div>

  <section className="event_people">
    <img src={doc} alt="doc" />
    <img src={doc} alt="doc" />
    <img src={doc} alt="doc" />
  </section>
</section>
  ):(
  <section
className="d-flex align-items-center justify-content-between mt-3 event_card_footer flex-wrap"
style={{ rowGap: 10 }}
>
<div className="d-flex align-items-center" style={{ columnGap: 10 }}>
<button className="se_view">View details</button>

</div>

<section className="event_people">
<img src={doc} alt="doc" />
<img src={doc} alt="doc" />
<img src={doc} alt="doc" />
</section>
</section>
 )

}
 
</div> 
        )
       
      })
      
    }

    </div>
  );  
};

const EventScheduleModal = () => {
  return (
    <div className="px-4 pb-5">
      <section className="pt-2">
        <button
          type="button"
          class="close close-founder-modal"
          data-dismiss="modal"
          aria-label="Close"
        >
          {/* <img className="pr-2" src={pen} alt="edit" />
          <img className="pr-2" src={trash} alt="trash" /> */}
          <span aria-hidden="true">&times;</span>
        </button>
      </section>

      <section className="mt-2">
        <p className="" style={{ color: "#E21919" }}>
          2 days : 30mins : 05 secs
        </p>

        <section className="d-flex program_modal_head mt-4">
          <h3 className="pr-3">Appleiine House Demo</h3>
          <p className="pt-2">Host: Applean Industry</p>
        </section>

        <section className="d-flex mt-3">
          <p className="pending_date pr-5">
            <span>50</span> | September
          </p>

          <p className="pending_time pt-1">
            <img src={bigClock} alt="clock" /> 10:00pm - 12pm
          </p>
        </section>

        <section className="event_schedule_modal_desc mt-5 p-4">
          <h4 className="pb-3">Description</h4>
          <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Enim lectus
            morbi elementum eu.Lorem ipsum dolor sit amet, consectetur
            adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing
            elit. Enim lectus morbi elementum eu.Lorem ipsum dolor sit amet,
            consectetur adipiscing elit.{" "}
          </p>
        </section>

        <section className="event_schedule_visibility mt-4 mb-3">
          <p>
            Visibility : <span>Public</span> <img src={down} alt="down arrow" />
          </p>
        </section>

        <section className="mb-3">
          <button className="back-btn">Join Event</button>
        </section>

        <section className="event_link">
          <a href="https://www.yebox.io/" target="_blank">
            <img className="pr-3" src={location} alt="location" />{" "}
            meet.google.com/jce-wata-fux
          </a>
        </section>

        <section className="mt-5">
          <p>Attendees</p>
          <div className="d-flex mt-4">
            <p className="pr-5">
              <img className="pr-3" src={name} alt="initial" /> Micheal Smith
            </p>
            <p className="pl-5">
              <img className="pr-3" src={name} alt="initial" /> Micheal Smith
            </p>
          </div>

          <div className="d-flex mt-4">
            <p className="pr-5">
              <img className="pr-3" src={name} alt="initial" /> Micheal Smith
            </p>
            <p className="pl-5">
              <img className="pr-3" src={name} alt="initial" /> Micheal Smith
            </p>
          </div>
        </section>

        <section className="event_schedule_availability mt-5">
          <p>Availability</p>
          <div className="mt-3 mb-4">
            <button className="mr-3">Yes</button>
            <button className="mr-3">No</button>
            <button className="mr-4">Maybe</button>
            <span>
              Request to reschedule{" "}
              <img className="pl-2" src={down} alt="arrow down" />
            </span>
          </div>
        </section>

        <section className="mt-5">
          <TextField label={"Day"} placeholder={"Thursday 17th Oct 2021"} />
        </section>

        <section className="row mt-5">
          <div className="col-lg-5">
            <Select label={"Start time"} placeholder={"Time"} />
          </div>
          <div className="col-lg-5">
            <Select label={"End time"} placeholder={"Time"} />
          </div>
        </section>

        <section className="send_request mt-5">
          <a href="#!">Send Request</a>
        </section>

        <section className="mt-5 event_card_footer">
          <a href="#!">Add to schedule</a>
        </section>
      </section>
    </div>
  );
};

==============================================================
==========================================================



"values":{
  "logo":"https://www.w3schools.com/js/tryit.asp?filename=tryjs_date_current",
  "elevatorPitch":"jane",
  "startupName":"male",
  "yearFounded":"Sat Mar 26 2022 15:59:18 GMT+0100 (West Africa Standard Time)",
  "regisrationNumber":"90876655",
  "companySize":"jane9038",
  "businessSector":"twine.io",
  "startupStage":"ganeee",
  "acceleratorName":"yeuwiw",
  "contactInfo":{
      "registeredAddress":"address",
      "country":"nigeria",
      "state":"Lagos",
      "city":"merian",
      "phoneNumber":"903948392",
      "companyEmail":"yuiiiytu@gmail.com"
  },
  "socialMedia":{
      "profileHandle":"handle",
      "companyWebsite":"https://www.w3schools.com/js/tryit.asp?filename=tryjs_date_current",
      "linkedInHandle":"https://www.w3schools.com/js/tryit.asp?filename=tryjs_date_current",
      "twitterHandle":"https://www.w3schools.com/js/tryit.asp?filename=tryjs_date_current"
  }
  "type":"startUpProfile",
  "accType":"startup",
},

onClick={() => history.push('/startup/dashboard')}

{/* 
              <CustomSelect
                name={'businessSector'}
                options={options}
                value={formik.values.businessSector}
                onChange={(value) =>
                  (value) => formik.setFieldValue('startupStage', value.value)
                }
                className="cust"
              /> */}

              <CustomSelect
              name={'startupStage'}
              options={stage}
              value={formik.values.startupStage}
              onChange={(value) => formik.setFieldValue('startupStage', value.value)}
              className="cust"
            />

<CustomSelect
                name='companySize'
                options={optionsNumb}
                value={formik.values.companySize}
                onChange={
                  formik.handleChange
                }
                className="cust"
              />
 const [contacts, setContacts] = useState({
  registeredAddress:
    stateAuth?.startupData?.startUpProfile?.contactInfo?.registeredAddress ?? '',
  country: stateAuth?.startupData?.startUpProfile?.contactInfo?.country ?? '',
  state: stateAuth?.startupData?.startUpProfile?.contactInfo?.state ?? '',
  city: stateAuth?.startupData?.startUpProfile?.contactInfo?.city ?? '',
  companyEmail:
    stateAuth?.startupData?.startUpProfile?.contactInfo?.companyEmail ?? '',
})
const [socialMedia, setSocialmedia] = useState({
  profileHandle:
    stateAuth?startupData?.startUpProfile?.socialMedia?.profileHandle ?? '',
  companyWebsite:
    stateAuth?.startupData?.startUpProfile?.socialMedia?.companyWebsite ?? '',
  linkedInHandle:
    stateAuth?.startupData?.startUpProfile?.socialMedia?.linkedInHandle ?? '',
  twitterHandle: stateAuth?.startupData?.startUpProfile?.socialMedia?.twitterHandle ?? '',
})


"value":{
  "startupId":"62401b6c823102897a328985",
  "startupName":"Bisi business card",
  "description":"we sell rice",
  "logo":"www.logo.com"
},
  "userId":"6246bcb64d65461c8b2756cf"


  approvedRequests: []
categories: "Tech"
city: "exxi"
companyDescription: "WE sell bread"
companyEmail: "dhhdjd@gmail.com"
companyLogo: "https://cdn.shoutng.com/kvkhwym84u5gzhccppfste.jpg"
companyName: "bulee Sea"
coordinatorName: "ziikoo"
country: "Nigeria"
declinedRequests: []
designation: "hdhdammnnkf"
industry: "Tech"
linkedin: "www.link.com"
offerings: {offerings: 'bread service', eligibilityCriteria: 'Eligibility', importantNote: 'hddjjfkkd', process: 'dhhdjjsjhd', partnershipValidity: 'gdhhfdhf', …}
pendingRequests: []
phoneNumber: "ryhhdjd"
state: "imo"
twitter: "www.twitt.com"
userId: "6246bcb64d65461c8b2756cf"
website: "http://web.com"


approvedRequests: []
categories: "Tech"
city: "exxi"
companyDescription: "WE sell bread"
companyEmail: "dhhdjd.gmail.com"
companyLogo: "http://google.com"
companyName: "bulee"
coordinatorName: "ziikoo"
country: "Nigeria"
declinedRequests: []
designation: "hdhdjfkf"
industry: "Tech"
linkedin: "www.link.com"
offerings: {eligibilityCriteria: 'Eligibility', importantNote: 'hddjjfkkd', process: 'dhhdjjsjhd', partnershipValidity: 'gdhhfdhf', turnAroundTime: 'gdhhfyeyyr', …}
pendingRequests: [{…}]
phoneNumber: "hhjdkdd"
state: "imo"
twitter: "www.twitt.com"
userId: "6246bc

) : item?.status === "declined" ? (
  <button className="declinedBtn mt-2">
    <img className="mr-2 mb-1" src={cancel} alt="declined icon" />
    Declined
  </button>
) : item?.status === "applied" ? (
  <button className="expiredBtn mt-2">
    <img className="mr-2 mb-1" src={expired} alt="expired icon" />
    Expired
  </button>

====================================================================
=======================================================================
if (opts === 'next') {
  setOpts(true)
  let result = await updateFounderProfile(startupProfile)

  if (result?.success) {
    toast.success('Profile' + ' ' + result?.message)
    setOpts(false)
    return changePath(path + 1)
  }
}
setLoading(true)
let result = await updateFounderProfile(startupProfile)

if (!result?.success) {
  toast.error(result?.message || 'There was an error in updating profile')
  setLoading(false)
  return
}
toast.success('Profile' + ' ' + result?.message)
setLoading(false)
history.push('/startup/dashboard')

 {/* <label> Paste Youtube Link of pitch video </label>
                <div className="d-flex my-2">
                  <input
                    type="text"
                    name="pitchDeckVideo"
                    onChange={handleChangeVid}
                    className="form-control youtube-input ps-3"
                    placeholder="Youtube link"
                    
                  />
                  <button className="button">Upload</button>
                </div> */}

                {/* <FileWrapper className="d-flex justify-content-center text-center">
                  {fileDoc !== null ? (
                    <img
                      style={{ width: "70px", height: "70px" }}
                      src={RedFile}
                      alt=".#"
                      className="mb-2"
                    />
                  ) : logoUploading ? (
                    <CircularLoader color={"#000"} />
                  ) : (
                    <>
                      <img src={DownloadIcon} alt="#" />
                      <FileText>Drag & Drop</FileText>
                      <FileText>
                        Drag files or click here to upload document{" "}
                      </FileText>
                    </>
                  )}

                  <input
                    type="file"
                    name="pitchDeckFile"
                    id="pitch-doc"
                    onChange={handleChange}
                    hidden
                  />
                  <LabelButton for="pitch-doc">Upload Files</LabelButton>
                </FileWrapper> */}

















 // const onNumberOnlyChange = (e) => {
  //   const keyCode = e.keyCode || e.which
  //   const keyValue = String.fromCharCode(keyCode)
  //   const isValid = new RegExp('[0-9]').test(keyValue)
  //   if (!isValid) {
  //     e.preventDefault()
  //     return
  //   }
  // }

  const handleChange = async(e) => {

    const { files, name } = e.target;
    const formData = new FormData();
    formData.append("dir", "kv");
    formData.append("ref", stateAuth.user?.userId);
    formData.append("type", "image");
    formData.append(0 , files[0])

    try {
      setLogoUploading(true);
      const response = await upload(formData)
      console.log(response) 
      setFileDoc(response?.path)
      setLogoUploading(false)

    } catch(error) {
      console.log(error)
      toast.error(error?.res?.data?.message || 'The was an error updating pitch deck');
    }

  }
  const handleChange = async(e) => {

    const { files, name } = e.target;
    const formData = new FormData();
    formData.append("dir", "kv");
    formData.append("ref", stateAuth.user?.userId);
    formData.append("type", "image");
    formData.append(0 , files[0])

    try {
      setLogoUploading(true);
      const response = await upload(formData)
      console.log(response) 
      setFileDoc(response?.path)
      setLogoUploading(false)

    } catch(error) {
      console.log(error)
      toast.error(error?.res?.data?.message || 'The was an error updating pitch deck');
    }

  }

  if (opts === 'next') {
        setOpts(true)
        let result = await updateFounderProfile(startupProfile)

        if (result?.success) {
          toast.success('Profile' + ' ' + result?.message)
          setOpts(false)
          return changePath(path + 1)
        }
      }
      setLoading(true)
      let result = await updateFounderProfile(startupProfile)

      if (!result?.success) {
        toast.error(result?.message || 'There was an error in updating profile')
        setLoading(false)
        return
      }
      toast.success('Profile' + ' ' + result?.message)
      setLoading(false)
      history.push('/startup/dashboard')


      handleWorkDetails({
        from,
        title: formik.getFieldProps('title').value,
        location: formik.getFieldProps('location').value,
        position: formik.getFieldProps('position').value,
        description: formik.getFieldProps('description').value,
        startDate: startDate,
        endDate: checked ? 'present' : endDate,
        school: formik.getFieldProps('school').value,
        course: formik.getFieldProps('course').value,
        degree: formik.getFieldProps('degree').value,
        activities: formik.getFieldProps('activities').value,
        eduStartDate: eduStartDate,
        eduEndDate: checked ? 'present' : eduEndDate,
        founder: false,
      });
      formik.resetForm({
        values: {
          title: '',
          location: '',
          position: '',
          description: '',
          startDate: '',
          endDate: '',
          school: '',
          course: '',
          degree: '',
          activities: '',
          eduStartDate: '',
          eduEndDate: '',
        },
      });

      const handleDateInput = (value , prefix) => {
        updateProfile("team" ,{
          coFounder: {
            ...stateAuth?.startupData?.team.coFounder,
            [prefix]: value,
          },
        });
      };
      
      const handlePhoneInput = (value) => {
        updateProfile("team",{
          coFounder: {
            ...stateAuth?.startupData?.team.coFounder,
            mobile_number: value,
          },
        });
      };
    
      const handleEduSubmit = (value) =>{
        updateProfile("team",{
          coFounder: {
            ...stateAuth?.startupData?.team.coFounder,
            eduction:[...stateAuth?.startupData?.team.coFounder.education, ...value]
          }
        });
      }


      const handleChange = (e, prefix = "") => {
        const { name, value } = e.target;
        if (prefix !== "") {
          updateProfile("team",{
            coFounder: {
              ...stateAuth?.startupData?.team.coFounder,
              [prefix]:{...stateAuth?.startupData?.team.coFounder[prefix], [name]: value}
            }
          });
          formik.handleChange(e);
          return;
        }
        updateProfile("team",{
          coFounder: {
            ...stateAuth?.startupData?.team.coFounder,
            [name]: value,
          },
        });
        formik.handleChange(e);
      }

      const handleKey = (e) =>{
        if(e.keyCode === 13){
        if(inputCompetitiveEdge.trim() === "") return;
        setValueChecker([...valueChecker , setInputCompetitiveEdge]);
        setInputCompetitiveEdge("");
        }
      }


      validationSchema: Yup.object({
        briefIntroduction: Yup.string().required('Required'),
        firstName: Yup.string().required('Required'),
        lastName: Yup.string().required('Required'),
        email: Yup.string().required('Required'),
        dob: Yup.string().required('Required'),
        linkedIn: Yup.string().required('Required'),
        twitter: Yup.string().required('Required'),
        website: Yup.string().required('Required'),
        country: Yup.string().required('Required'),
        state: Yup.string().required('Required'),
        city: Yup.string().required('Required'),
        mobile_number: Yup.number().min(13, 'Number must not be less than 13 digit').required('Required'),
      }),


      const handleChange = (e, prefix = "") => {
        const { name, value } = e.target;
        if (prefix !== "") {
          updateProfile("team",{
            coFounder: {
              ...stateAuth?.startupData?.team.coFounder,
              [prefix]:{...stateAuth?.startupData?.team.coFounder[prefix], [name]: value}
            }
          });
          formik.handleChange(e);
          return;
        }
        updateProfile("team",{
          coFounder: {
            ...stateAuth?.startupData?.team.coFounder,
            [name]: value,
          },
        });
        formik.handleChange(e);
      }

===========================================================
===============================================================

const handleDateInput = (value , prefix) => {
  updateProfile("team" ,{
    coFounder: {
      ...stateAuth?.startupData?.team.coFounder,
      [prefix]: value,
    },
  });
};

const handlePhoneInput = (value) => {
  updateProfile("team",{
    coFounder: {
      ...stateAuth?.startupData?.team.coFounder,
      mobile_number: value,
    },
  });
};

{/* 
  <FormWrapper height="70%">
    <div className="div border-bottom pb-3">
      <span>Invite Team Members</span>
      <p className="pt-3">Key team members</p>
    </div>

    <div className="form-group mt-5 mb-4">
      <label>
        Invite a team member that can benefit from knight venture
      </label>
      <input
        type="text"
        className="form-control my-2 ps-3"
        placeholder="Enter email address"
      />
    </div>
    <div className="my-3 mx-3">
      <CustomButton background="#031298"> Invite </CustomButton>
    </div>
  </FormWrapper> */}

========================================================
===========================================================


const renderCard =(num) =>{
  num.map(item => {
    return (
      <div key={item} className="col-lg-3 mb-3">
    <Skeleton width={160} height={120} />
  </div>
    )
  })
}



{dashboard ? (
  <article>
    <section className="row py-4">
      {
        num.map((item, i) => {
        return (
          <div key={i} className="col-lg-2 mb-3 mx-4">
        <Skeleton width={160} height={120} />
      </div>
        )
      })
      }
      
     
    </section>
    <section>
    {
    big ? (
      <div className=" d-flex" >
      <div  className="col-lg-6  mb-3 ">
        <Skeleton width={290} height={190} />
      </div>
      <div className="col-lg-6  mb-3 mx-1">
        <Skeleton width={290} height={190} />
      </div>
      </div>
    ): (<Skeleton count={7} height={25} className="mb-3" />)
    }
    
    </section>
    <section>
    <Skeleton count={3} height={25} className="mb-3" />
    </section>
  </article>
) : (
  <article>
    <section className="p-4">
      <Skeleton count={12} height={20} className="mb-3" />
    </section>
  </article>
)}
==================================================
=================================================

// import DownloadIcon from "../../../../../../assets/icons/download.svg";
// import RedFile from "../../../../../../assets/icons/redFile.svg";
// import BluFile from "../../../../../../assets/icons/bluFile.svg";
// import { upload } from "./../../../../../../services/utils";


   {/* <FileWrapper className='d-flex justify-content-center text-center'>
            {
                fileDoc !== null ? (
                  <img src={RedFile} alt='.' 
                  style={{width:'70px', height:'70px'}}
                   />
                ):(
                  logoUploading ? <CircularLoader color={'#000'} /> : 
                 <>
                 <img src={DownloadIcon} alt='#' />
              <FileText>Drag & Drop</FileText>
              <FileText>Drag files or click here to upload </FileText>
              <FileSize> {'(Max. File size 5mb)'} </FileSize>
              </>
                )
              }
              <input type='file'
              onChange={handleChange} 
              id='utilize' hidden />
              <LabelButton for='utilize'>Upload Files</LabelButton>
            </FileWrapper> */}

==================================================
=====================================================
{/* <div className='form-group col-12'>
<label> Do you have a lead investor for this round?* </label>
<BntWrap>
  <button
    className={`me-3 ${hasLeadInvestor === 'yes' && 'active'}`}
    onClick={(e) => {
      e.preventDefault();
      setHasLeadInvestor('yes');
    }}
  >
    Yes
  </button>
  <button
    className={hasLeadInvestor === 'no' && 'active'}
    onClick={(e) => {
      e.preventDefault();
      setHasLeadInvestor('no');
    }}
  >
    No
  </button>
</BntWrap>
</div> */}
{/* <div className='sold my-3'>
<div
  className='d-flex justify-content-center'
  data-target='#cofounder'
  onClick={() => setShowModal(true)}
>
  <Tag
    name='+ Add Lead Investor'
    color='#4F4F4F'
    bg='rgba(183, 218, 231, 0.5)'
    padding='9px 30px'
  />
</div>
</div> */}


   {/* <label>Investors who participated in last funding round*</label>
          <div className='row'>
            <div className='sold my-3 col-lg-12 d-flex justify-content-center'>
              <Tag
                name='+ Add Lead Investor'
                color='#4F4F4F'
                bg='rgba(183, 218, 231, 0.5)'
                padding='10px 32px'
              />
            </div>
          </div> */}

=========================================================
====================================================================

{/* <div className='form-group col-12'>
<label>Did you have a lead investor for last round?<span style={{color: "red"}}>*</span></label>
<BntWrap>
  <button
    className={`me-3 ${hasLeadInvestor === true ? 'active' : ''}`}
    onClick={(e) => {
      e.preventDefault();
      setHasLeadInvestor(true);
    }}
  >
    Yes
  </button>
  <button
    className={hasLeadInvestor === false ? 'active' : ''}
    onClick={(e) => {
      e.preventDefault();
      setHasLeadInvestor(false);
    }}
  >
    No
  </button>
</BntWrap>
</div> */}


{/* <div className='col-12 my-5'>
<span
  style={{
    color: '#120297',
    borderBottom: '1px solid #120297',
    fontWeight: '600',
    cursor: 'pointer',
  }}
>
  Add previous founding round +
</span>
</div> */}


<section className="side-footer " onClick={() => history.push('/startup/support')}>





"startUpProfile" : {
  "logo" : "https://cdn.shoutng.com/kv304nexraqfgbwbnfuxpe.jpg",
  "elevatorPitch" : "In publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before the final copy is available.",
  "brand" : "Trav",
  "startupName" : "Winner Airlines",
  "yearFounded" : "2017-04-09",
  "registrationNumber" : "6889990088",
  "companySize" : "11-20",
  "businessSector" : "business",
  "startupStage" : "Growth Stage",
  "acceleratorName" : "Accelerator",
  "contactInfo" : {
      "registeredAddress" : "Adeneyi",
      "country" : "Nigeria",
      "state" : "Lagos",
      "city" : "Lagos",
      "phoneNumber" : "+2348165796896",
      "companyEmail" : "brightbrain@gmail.com",
      "_id" : ObjectId("62592f345af52b0b6724f96e")
  },
  "socialMedia" : {
      "profileHandle" : "Yebox",
      "companyWebsite" : "https://www.w3schools.com/js/tryit.asp?filename=tryjs_date_current",
      "linkedInHandle" : "Yebox",
      "twitterHandle" : "Yebox",
      "_id" : ObjectId("62592f345af52b0b6724f96f")
  },
  "_id" : ObjectId("62592f345af52b0b6724f96d")
},
"pitchDeck" : {
  "pitchDeckFile" : "https://cdn.shoutng.com/kvxf0c883zyo2goabeonpv.pdf",
  "pitchDeckVideo" : "https://cdn.shoutng.com/kvvfji44soqr5vvx4ynogk.mp4",
  "_id" : ObjectId("625930305af52b0b6724f975")
},
"team" : {
  "avatar" : "https://cdn.shoutng.com/kvlyknlq810h4lxzagidxw.png",
  "briefIntroduction" : "Hellooooo",
  "gender" : "male",
  "firstName" : "Enerst",
  "lastName" : "Owunbuzia",
  "email" : "isaackelvin256@gmail.com",
  "dob" : ISODate("2007-04-18T00:00:00.000Z"),
  "country" : "Nigeria",
  "state" : "Lagos",
  "city" : "Lagos",
  "mobile_number" : "+2348163394719",
  "skills" : [ 
      "java", 
      "c#"
  ],
  "experience" : [ 
      {
          "companyName" : "Purplegate Technology",
          "position" : "",
          "location" : "USA",
          "startDate" : "2017-04-10T09:05:46.548Z",
          "endDate" : "2022-04-04T09:05:54.603Z",
          "isPresentWorking" : false,
          "responsibility" : "Work well",
          "_id" : ObjectId("625938105af52b0b6724f97d")
      }
  ],
  "education" : [ 
      {
      
        averageInvestment: ""
investmentExperience: ""
investmentPreference: "B2B"
investmentThesis: ""
stage: "Pre-seed"
techSector: ""
preferredStage
  =================================================================
  ========================================================================
  ===============================================================================================
  Booster partner page dont touch
  ==============================================================

  <section className="row mt-4 dash-main-content">
  <div className="col-lg-6">
    <header className="d-flex align-items-center justify-content-between dashboard-applications-header">
      <h5>New Applications</h5>
      <span onClick={() => push("/booster/applicants#all")}>See All</span>
    </header>

    <section>
      {bossterRes && bossterRes?.application.map((data, i) => (
        <div style={{ marginBottom: 21 }}>
          <ApplicationCard data={data} logo={applicantLogo} key={i} />
        </div>
      ))}
    </section>
  </div>
  <div className="col-lg-6 mt-5">
    <ApplicationChart />
  </div>
</section>

      
========================================================================
children, closeModal, title


const [cate , setCate] = useState([
  {
    name:'test1',
    id:'21bc',
    questions:[
      {
        quest:'whaoo',
        ansa:''
      },
      {
        quest:'whaoo are',
        ansa:''
      },
      {
        quest:'whaoo we',
        ansa:''
      },
      {
        quest:'whaoo ueue',
        ansa:''
      }
    ]
  },
  {
    name:'test2',
    id:'298sc',
    questions:[
      {
        quest:'what is r',
        ansa:''
      },
      {
        quest:'where do u',
        ansa:''
      },
      {
        quest:'hmmm',
        ansa:''
      },
      {
        quest:'arrr',
        ansa:''
      }
    ]
  },
  {
    name:'test3',
    id:'31dq',
    questions:[
      {
        quest:'dhjjss',
        ansa:''
      },
      {
        quest:'dhjsjs',
        ansa:''
      },
      {
        quest:'dhjsune',
        ansa:''
      },
      {
        quest:'whaoo ueue',
        ansa:''
      }
    ]
  }
])







const [pageHolder , setPageHolder] = useState(0)

const tabItems = cate.map(item => item.name);

const dashCardColors = ["#E5FFE4", "#FAD7DC", "#DFF1FF"];

const bunts = [1, 2 , 3, 4 , 5]
console.log(cate)


const handleChange =(id , index , value) =>{
  setCate( cate.map(data =>{
    if(data.id === id){
      data.questions.map((item, ind) =>{
        if(ind === index){
          item.ansa = value
        }
        return item ;
      })
    }
    return data;
  }) )
}


















const renderPage = () =>{

  switch(pageHolder){
    case 0 : 
    return (
      <div>
        { cate[0].name }
     <div className="my-3 mb-3" >
      {
        cate[0].questions.map((item , i) =>(
          <>
            <h6> { item.quest } </h6>
           <div>
            { 
            bunts.map((data) => (
              <button onClick={() => handleChange(cate[0].id , i , data)} className="btn btn-outline-success mx-2" >  { data } </button>
            ))  
            }
           </div>
          </>
        ))
      }
     </div>
<div className="my-3">
<button className="btn btn-primary"  onClick={() => setPageHolder(pageHolder + 1)} > next { pageHolder} </button>
</div>
      </div>
    )
    case 1 :
      return (
        <div>
      {
      cate[1].name  
      }
      <div className="my-3 mb-3" >
      {
        cate[1].questions.map((item , i) =>(
          <>
            <h6> { item.quest } </h6>
           <div>
            { 
            bunts.map((data) => (
              <button onClick={() => handleChange(cate[1].id , i , data)} className="btn btn-outline-success mx-2" >  { data } </button>
            ))  
            }
           </div>
          </>
        ))
      }
     </div>
      <div className="my-3 mb-3" >

</div>
      <div className="my-3">
<button className="btn btn-primary"  onClick={() => setPageHolder(pageHolder + 1)} > next { pageHolder } </button>
</div>
        </div>
      )

   case 2 :
     return (
      <div>
      {
      cate[2].name  
      }
      <div className="my-3 mb-3" >
      {
        cate[2].questions.map((item , i) =>(
          <>
            <h6> { item.quest } </h6>
           <div>
            { 
            bunts.map((data) => (
              <button onClick={() => handleChange(cate[2].id , i , data)} className="btn btn-outline-success mx-2" >  { data } </button>
            ))  
            }
           </div>
          </>
        ))
      }
     </div>
      <div className="my-3 mb-3" >
     
      </div>
      <div className="my-3">
<button className="btn btn-primary"  onClick={() => setPageHolder(pageHolder + 1)} > next { pageHolder } </button>
</div>
        </div> 
     )   
    default :
  return <div> { cate[0].name }  </div>
  }

  
}
====================================================================
=====================================================================
categories: "Bike Rentals"
city: "Lagos"
companyDescription: "4 Apr 2020 — I am trying to add Select All / Unselect All to React Antd's 'SELECT' component. ... I see that I do get everything selected & unselected in the \" ...\n3 answers\n \n·\n \nTop answer: \nThe issue was with using Antd's Form & Form.item along with Select. Code works perfectly ...\n\nHow to set border-radius to ant design Select componenthttps://stackoverflow.com › questions › how-to-set-bor...\n10 Mar 2022 — I am using ant design and I want to change border-radius of Select component but it is not working. The code is below."
companyEmail: "brightbrain@gmail.com"
companyName: "Purplegate Technology"
coordinatorName: "Enerst Owunbuzia"
country: "Nigeria"
declinedRequests: []
designation: "Enerst Owunbuzia"
industry: "AI"
linkedin: "@Enerst"
logo: "https://cdn.shoutng.com/kve5rz0dhhtxob4wvrvapk.png"
offerings: {offerings: '4 Apr 2020 — I am trying to add Select All / Unsel…mponent but it is not working. The code is below.', eligibilityCriteria: '4 Apr 2020 — I am trying to add Select All / Unsel…mponent but it is not working. The code is below.', importantNote: '4 Apr 2020 — I am trying to add Select All / Unsel…mponent but it is not working. The code is below.', process: '4 Apr 2020 — I am trying to add Select All / Unsel…mponent but it is not working. The code is below.', partnershipValidity: 'Analytics', …}
pendingRequests: [{…}]
phoneNumber: "+2348165796896"
state: "Lagos"
twitter: "@twitter"
userId: "6263fcb3ed0b02cccd2c96a9"
website: "ww.hdhh.com"
__v: 0


eligibilityCriteria: "4 Apr 2020 — I am trying to add Select All / Unselect All to React Antd's 'SELECT' component. ... I see that I do get everything selected & unselected in the \" ...\n3 answers\n \n·\n \nTop answer: \nThe issue was with using Antd's Form & Form.item along with Select. Code works perfectly ...\n\nHow to set border-radius to ant design Select componenthttps://stackoverflow.com › questions › how-to-set-bor...\n10 Mar 2022 — I am using ant design and I want to change border-radius of Select component but it is not working. The code is below."
freeCreditValue: true
importantNote: "4 Apr 2020 — I am trying to add Select All / Unselect All to React Antd's 'SELECT' component. ... I see that I do get everything selected & unselected in the \" ...\n3 answers\n \n·\n \nTop answer: \nThe issue was with using Antd's Form & Form.item along with Select. Code works perfectly ...\n\nHow to set border-radius to ant design Select componenthttps://stackoverflow.com › questions › how-to-set-bor...\n10 Mar 2022 — I am using ant design and I want to change border-radius of Select component but it is not working. The code is below."
offerings: "4 Apr 2020 — I am trying to add Select All / Unselect All to React Antd's 'SELECT' component. ... I see that I do get everything selected & unselected in the \" ...\n3 answers\n \n·\n \nTop answer: \nThe issue was with using Antd's Form & Form.item along with Select. Code works perfectly ...\n\nHow to set border-radius to ant design Select componenthttps://stackoverflow.com › questions › how-to-set-bor...\n10 Mar 2022 — I am using ant design and I want to change border-radius of Select component but it is not working. The code is below."
partnershipValidity: "Analytics"
process: "4 Apr 2020 — I am trying to add Select All / Unselect All to React Antd's 'SELECT' component. ... I see that I do get everything selected & unselected in the \" ...\n3 answers\n \n·\n \nTop answer: \nThe issue was with using Antd's Form & Form.item along with Select. Code works perfectly ...\n\nHow to set border-radius to ant design Select componenthttps://stackoverflow.com › questions › how-to-set-bor...\n10 Mar 2022 — I am using ant design and I want to change border-radius of Select component but it is not working. The code is below."
turnAroundTime: "April"






 // const statusRender = () => {
  //   switch (data?.status) {
  //     case "pending":
  //       return (
  //         <div className="d-flex align-items-center appCard-btn-group mb-3">
  //           <Button label="Approve" />
  //           <Button label="Decline" variant="secondary" />
  //         </div>
  //       );
  //     case "approved":
  //       return (
  //         <div className="d-flex align-items-center mb-3">
  //           <img src={approvedIcon} alt="approved" />
  //           <p className="approved-txt">Approved</p>
  //         </div>
  //       );

  //     case "declined":
  //       return (
  //         <div className="d-flex align-items-center mb-3">
  //           <img src={declinedIcon} alt="declined" />
  //           <p className="declined-txt">Declined</p>
  //         </div>
  //       );
  //     case "expired":
  //       return (
  //         <div className="d-flex align-items-center mb-3">
  //           <img src={expiredIcon} alt="expired" />
  //           <p className="expired-txt">Expired</p>
  //         </div>
  //       );
  //     case "re-applied":
  //       return (
  //         <div className="d-flex align-items-center appCard-btn-group mb-3">
  //           <Button label="Accept" />
  //           <Button label="Ignore" variant="secondary" />
  //         </div>
  //       );

  //     default:
  //       return (
  //         <div className="d-flex align-items-center appCard-btn-group mb-3">
  //           <Button label="Approve" />
  //           <Button label="Decline" variant="secondary" />
  //         </div>
  //       );
  //   }
  // };










<h1>Test out test</h1>
<div className="d-flex" >
{
  cate.map((item , i) =>(
  <button className="btn btn-gray mx-3 " onClick={() => setPageHolder(i)} > { item.name } </button> 
  ))
}
</div>
<div>
{  renderPage()  }
</div>


0:
dateOfAchievement: "2018-05-15"
description: "10\n\nPlease update your react dependency in package.json to explicitly be 15.0.2, not ^15.0.2 since the latter resolves to 15.1.0 which causes this issue. It is recommended to leave it that way until you upgrade for the next time and get this error on"
title: 

======================================================
============================================================



[
  'fundRaising.capTable.amountRaised',
  'fundRaising.capTable.amountInvestedByFounders',
  'fundRaising.financialProjection.files',
  'fundRaising.fundingAsk.description',
  'fundRaising.fundingAsk.instrumentForRound',
  'fundRaising.fundingAsk.numberOfRounds',
  'fundRaising.fundingAsk.fundraisingAmount',
  'fundRaising.previousRound.instrumentForRound',
  'fundRaising.previousRound.numberOfRounds',
  'fundRaising.previousRound.fundraisingAmount',
  'fundRaising.previousRound.dilution',
  'fundRaising.previousRound.preMoneyValuation',
  'fundRaising.previousRound.postMoneyValuation',
  'pitchDeck.pitchDeckFile',
  'pitchDeck.pitchDeckVideo',
  'team.avatar',
  'team.briefIntroduction',
  'team.gender',
  'team.city',
  'team.country',
  'team.email',
  'team.firstName',
  'team.lastName',
  'team.state',
  'team.mobile_number',
  'startUpProfile.logo',
  'startUpProfile.elevatorPitch',
  'startUpProfile.brand',
  'startUpProfile.acceleratorName',
  'startUpProfile.businessSector',
  'startUpProfile.companySize',
  'startUpProfile.registrationNumber',
  'startUpProfile.startupStage',
  'product.description',
  'product.competitiveEdge',
]

    // if(!stateAuth.type[0]?.includes(props.type)){
    //   setLocationHistory(history.location.pathname);
    //   history.push("/");
    // }
    // if(!stateAuth.completedRegistration){
    //     console.log(history.location.pathname)
    // history.push(`/${getRole()}/registration`)
    // }
    // if(!stateAuth.roles.includes(props.type)){

    //     history.push('/')
    //     // setLocationHistory(history.location.pathname)
    //     console.log('e noh work')
    //     console.log(!stateAuth.roles.includes(props.type))
    // }

































































































































































