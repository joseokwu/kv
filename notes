// Validation for Antd
    {
        type: name,
        message: name === 'email' ?`Please input a correct ${name}`: '' ,
      },
      ===========================================================
      =========================================================
onClick={() => {
            push("#offerings");
          }}

  ================================================
  =================================================
  everthing about the side BAR 
  ------------------------------------------

import React, { useEffect, useState } from "react";
import "./sidebar.css";
import { useHistory } from "react-router";
import user from "../../assets/images/sampleUserSide.png";
import dashboard from "../../assets/icons/dashboard.svg";
import startup from "../../assets/icons/startupApplicants.svg";
import event from "../../assets/icons/eventIcon.svg";
import helpDesk from "../../assets/icons/helpDesk.svg";
import { startUpRoutes } from "../../constants/sidebarRoutes";

const investorNavigators = [
  {
    title: "Dashboard",
    activator: "dashboard",
    path: "/investor/dashboard",
    icon: dashboard,
  },
  {
    title: "Investment Opportunities",
    activator: "opportunities",
    path: "/investor/opportunities",
    icon: startup,
  },
  {
    title: "Events",
    activator: "events",
    path: "/investor/events",
    icon: event,
  },
];

const boosterNavigators = [
  {
    title: "Dashboard",
    activator: "dashboard",
    path: "/dashboard",
    icon: dashboard,
  },
  {
    title: "Startup Applicants",
    activator: "applicants",
    path: "/applicants",
    icon: startup,
  },
];

export const Sidebar = () => {
  const {
    location: { pathname },
    push,
  } = useHistory();

  const activateLink = (path) => {
    return pathname.includes(path) ? "active-side" : "";
  };

  const [navigator, setNavigator] = useState([]);

  useEffect(() => {
    if (pathname.includes("investor")) {
      setNavigator(investorNavigators);
    } else {
      setNavigator(boosterNavigators);
    }
  }, [pathname]);

  console.log(`navigator`, navigator);

  return (
    <div className="side-main">
      <section className="side-navigator">
        <div>
          <img src={user} alt="profile" />
        </div>
        <h5 className="mb-0 side-header">Hello Micheal Smith</h5>
        <p className="mb-0 side-text">
          {pathname.includes("investor") ? "Investor" : "Partner"}
        </p>

        <ul className="side-list">
          {navigator.length > 0 &&
            navigator.map((nav, i) => {
              return (
                <li>
                  <a href={nav.path}>
                    <img src={nav.icon} alt="dash" />
                    <p className={`${activateLink(nav.activator)} side-text`}>
                      {nav.title}
                    </p>
                  </a>
                </li>
              );
            })}
        </ul>
      </section>
      <section className="side-footer" onClick={() => push("/support")}>
        <img src={helpDesk} alt="help" />
        <p className="mb-0 side-text" role="button">
          Need help? Contact us
        </p>
      </section>
    </div>
  );
};





export const StartupSideBar = () => {
  const {
    location: { pathname },
    push,
  } = useHistory();

  const [pathState, setPathState] = useState(0)

  const activateLink = (path) => {
    return pathname.includes(path) ? "active-side-start" : "side-text-start";
  };

  const [navigator, setNavigator] = useState([]);

  useEffect(() => {
    if (pathname.includes("investor")) {
      setNavigator(investorNavigators);
    } else {
      setNavigator(boosterNavigators);
    }
  }, [pathname]);

  console.log(`navigator`, navigator);

  return (
    <div className="start-main">
      <section className="side-navigator">
      

        <ul className="side-list-start">
          {navigator.length > 0 &&
            startUpRoutes.map((nav, i) => {
              return (
                <li>
                  <a href={nav.path}>
                  
                    <p className={`${activateLink(nav.activator)} side-text-start`}>
                      {nav.title}
                    </p>
                  </a>
                </li>
              );
            })}
        </ul>
      </section>

    </div>
  );
};
=============================================================
==========================================================
ends here
=======================================================



export const startUpRoutes = [
  {

    title: "Startup Profile",
    activator: "startup",
    path: "/startupRegistration",
    
  },
  {
    title: "Pitch Deck",
    activator: "pitchdeck",
    path: "/startupRegistration/pitchdeck",
  
  },
  {
    title: "Team",
    activator: "team",
    path: "/startupRegistration/team",
  
  },
  {
      title: "Product",
      activator: "product",
      path: "/startupRegistration/product",
    
    },
    {
      title: "Fundraising",
      activator: "fundraising",
      path: "/startupRegistration/fundraising",
    
    },
    {
      title: "Milestones",
      activator: "milestones",
      path: "/startupRegistration/milestones",
    
    },
];

Domi data ends
===========================================================
==============================================
?? `https://ui-avatars.com/api/?name=${business?.name}`

===================================================================

===================================================================


<Modal show={show} onHide={handleClose}>
<Modal.Header   closeButton>
  <Modal.Title className='tit' > {title} </Modal.Title>
</Modal.Header>
<Modal.Body>
    { children }
</Modal.Body>

</Modal>


======================================================
=======================================================
{
  skill.map(item =>{
      return <Option key={item}>{item}</Option>
  })
}

==================================================================
=================================================================
{ icon: newApp, name: "new", count: 12, color: "#FAD7DC" },
{ icon: pending, name: "pending", count: 5, color: "#DFF1FF" },
{ icon: approved, name: "approved", count: 60, color: "#EEDAFB" },
{ icon: expired, name: "expired", count: 10, color: "#E5FFE4" },
{ icon: reApplied, name: "Re-Applied", count: 20, color: "#FDE591" },

==================================================================
====================================================================
<section className="row mt-5 dash-main-content">
<div className="col-lg-6">
  <header className="d-flex align-items-center justify-content-between dashboard-applications-header">
    <h5>New Applications</h5>
    <span>See All</span>
  </header>

  <section>
    {appCardData.map((data, i) => (
      <div style={{ marginBottom: 21 }}>
        <ApplicationCard logo={applicantLogo} key={i} />
      </div>
    ))}
  </section>
</div>
<div className="col-lg-6 mt-5">
  <ApplicationChart />
</div>
</section>
=============================================
==============================================
case '#Fund Utilization':
  return  <FundUtilization />;
  case '#Cap Table':
    return <CapTable />;
  case '#Previous Round':
    return <PreviousRound /> ;
    case '#Financial Projection':
      return <FinancialProjection /> ;

====================================================
==========================================================
<section className="d-flex align-items-center appChart-label">
<LabelCheck color="#2196F3" />
<p className="label-name">Expired</p>
<p className="label-percent">25%</p>
</section>

================================================
=============================================

function for making a download work 

const downloadStatement = () => {
  const element = document.querySelector('#account');
  
  let opt = {
    margin: 1,
    filename:'template.pdf',
    image: { type: 'jpeg', quality: 0.98 },
    html2canvas: { scale: 2 },
    jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' },
    };
  
    //console.log(html2pdf().from(element).set(opt).save())
  
    return  html2pdf().from(element).set(opt).save();
  

  }

=================================================================
===================================================================
<div className=" col-lg-6 col-12">
<div className="div p-5">
  <img src={RedFile} alt=".#" />
</div>
<div id="div" className="p-2">
  <div className="d-flex mt-n2">
    <img
      src={BlueFile}
      alt=".#"
      style={{ width: '10%', height: '10%' }}
      className="mt-3"
    />
    <p
      className=""
      style={{ marginLeft: '0.2rem', fontSize: '0.9rem' }}
    >
      Product Demo
    </p>
  </div>
  <p className="my-n2 p">2.5 mb</p>
</div>
</div>







        <div className=" col-lg-6 col-12">
                      <div className="div p-5">
                        <img src={RedFile} alt=".#" />
                      </div>
                      <div id="div" className="p-2">
                        <div className="d-flex mt-n2">
                          <img
                            src={BlueFile}
                            alt=".#"
                            style={{ width: '10%', height: '10%' }}
                            className="mt-3"
                          />
                          <p
                            className=""
                            style={{ marginLeft: '0.2rem', fontSize: '0.9rem' }}
                          >
                            Product Demo
                          </p>
                        </div>
                        <p className="my-n2 p">2.5 mb</p>
                      </div>
                    </div>
===============================================================
{cardData.map((data, i) => (
  <>
    <DashCard
      className="col-lg-3 col-md-6 col-12"
      icon={data.icon}
      name={data.name}
      count={data.count}
      color={data.color}
      key={i}
    />
  </>
))}

===========================================
founders: "20"
investors: "30"
mentors: "20"
partners: "10"
=================================================================
"postMoney":"7,000,000",
            "fundAsk":{
            "requirement":[
             "$100,000",
            "Common Equity",
            "Seed",
            "10%",
            "$20,000",
            "$30,000",
            "20 November, 2021",
            ],
            "committment":[
            {
              "investor": "Prima Juma Umbe",
              "investType": "Angel Investor",
              "amnt": "$100,000",
              "ledInvest": "Yes",
            },
            {
              "investor":"John Juma Umbe",
              "investType": "Angel Investor",
              "amnt": "$120,000",
              "ledInvest":"No",
            },
            {
              "investor": "Kim saje",
              "investType": "Angel Investor",
              "amnt": "$20,000",
              "ledInvest": "No",
            },
            {
              "investor": "shaun ken",
              "investType": "Angel Investor",
              "amnt": "$5,000",
              "ledInvest": "Yes",
            },
            {
              "investor": "kassy franee",
              "investType": "Angel Investor",
              "amnt": "$40,000",
              "ledInvest":"No",
            },
            {
              "investor": "Leo jimmy",
              "investType": "Angel Investor",
              "amnt": "$900,000",
              "ledInvest": "Yes",
            },
                ]
               },
               "fundUtilization":[
               
                           {
                  "head": "Revenue",
                  "month1": "$200,000",
                  "month2": "$25, 000",
                  "month3": "$200, 000",
                  "month4": "$200,000",
                  "month5": "$300,000",
                  "month6": "$200,000",
                },
                {
                 " head": "Growth %",
                  "month1": "",
                  "month2": "",
                  "month3": "",
                  "month4": "",
                  "month5": "",
                  "month6": "",
                },
                {
                  "head": "Expenses",
                  "month1": "$200,000",
                  "month2": "$25, 000",
                  "month3": "$200, 000",
                  "month4": "$200,000",
                  "month5": "$300,000",
                  "month6": "$200,000",
                },
                     {
                  "head": "Burn Rate",
                  "month1": "$200,000",
                  "month2": "$125, 000",
                  "month3": "$230, 000",
                  "month4": "$45,000",
                  "month5": "$31,000",
                  "month6": "$24,220",
                },
                 {
                  "head": "Runway Months",
                  "month1": "$200,000",
                  "month2": "$125, 000",
                  "month3": "$230, 000",
                  "month4": "$45,000",
                  "month5": "$31,000",
                  "month6": "$24,220",
                },
        
               ],
                 "capTable":[
                    {
                  "shareHolders": "John Carter Robinson",
                  "shareType": "Angel Investor",
                  "noShare": "5",
                  "sharePercent": "2.5 %",
                },
                   {
                  "shareHolders": "John Carter Robinson",
                  "shareType": "Angel Investor",
                  "noShare": "5",
                  "sharePercent": "2.5 %",
                },
                   {
                  "shareHolders": "John Carter Robinson",
                  "shareType": "Angel Investor",
                  "noShare": "5",
                  "sharePercent": "2.5 %",
                },
                   {
                  "shareHolders": "John Carter Robinson",
                  "shareType": "Angel Investor",
                  "noShare": "5",
                  "sharePercent": "2.5 %",
                },
                   {
                  "shareHolders": "John Carter Robinson",
                  "shareType": "Angel Investor",
                  "noShare": "5",
                  "sharePercent": "2.5 %",
                },
                   {
                  "shareHolders": "John Carter Robinson",
                  "shareType": "Angel Investor",
                  "noShare": "5",
                  "sharePercent": "2.5 %",
                },
                   {
                  "shareHolders": "",
                  "shareType": "Total",
                  "noShare": "",
                  "sharePercent": "%",
                },
                 ],
                 "previousRound":[
                        {
                      "invest": "James Parker",
                     "fundDate": "20 November 2021",
                      "dealType": "Common Equity",
                      "fundRound": "Seed",
                      "investAmnt": "$30,000",
                      "dilution": "20 %",
                      "preMoney": "$5, 000",
                      "pstMoney": "$10, 000",
                    },
                    {
                  "invest": "James Parker",
                 "fundDate": "20 November 2021",
                  "dealType": "Common Equity",
                  "fundRound": "Seed",
                  "investAmnt": "$30,000",
                  "dilution": "20 %",
                  "preMoney": "$5, 000",
                  "pstMoney": "$10, 000",
                },
                {
                  "invest": "James Parker",
                 "fundDate": "20 November 2021",
                  "dealType": "Common Equity",
                  "fundRound": "Pres-Series A",
                  "investAmnt": "$30,000",
                  "dilution": "20 %",
                  "preMoney": "$5, 000",
                  "pstMoney": "$10, 000",
                },
                {
                  "invest": "James Parker",
                 "fundDate": "20 November 2021",
                  "dealType": "Debt Financing",
                  "fundRound": "Series A",
                  "investAmnt": "$30,000",
                  "dilution": "20 %",
                  "preMoney": "$5, 000",
                  "pstMoney": "$10, 000",
                },
                 ]

===============================================================
"foundersCapitial":"100,000",
"totalFund":"300,000",
"preMoney":"400,000",
"postMoney":"7,000,000",
"fundAsk":{
"requirement":[
 "$100,000",
"Common Equity",
"Seed",
"10%",
"$20,000",
"$30,000",
"20 November, 2021"
],
"committment":[
{
  "investor": "Prima Juma Umbe",
  "investType": "Angel Investor",
  "amnt": "$100,000",
  "ledInvest": "Yes"
},
{
  "investor":"John Juma Umbe",
  "investType": "Angel Investor",
  "amnt": "$120,000",
  "ledInvest":"No"
},
{
  "investor": "Kim saje",
  "investType": "Angel Investor",
  "amnt": "$20,000",
  "ledInvest": "No"
},
{
  "investor": "shaun ken",
  "investType": "Angel Investor",
  "amnt": "$5,000",
  "ledInvest": "Yes"
},
{
  "investor": "kassy franee",
  "investType": "Angel Investor",
  "amnt": "$40,000",
  "ledInvest":"No"
},
{
  "investor": "Leo jimmy",
  "investType": "Angel Investor",
  "amnt": "$900,000",
  "ledInvest": "Yes"
}
    ]
},
"fundUtilization":[
   
{
  "head": "Revenue",
  "month1": "$200,000",
  "month2": "$25, 000",
  "month3": "$200, 000",
  "month4": "$200,000",
  "month5": "$300,000",
  "month6": "$200,000"
},
{
 " head": "Growth %",
  "month1": "",
  "month2": "",
  "month3": "",
  "month4": "",
  "month5": "",
  "month6": ""
},
{
  "head": "Expenses",
  "month1": "$200,000",
  "month2": "$25, 000",
  "month3": "$200, 000",
  "month4": "$200,000",
  "month5": "$300,000",
  "month6": "$200,000"
},
     {
  "head": "Burn Rate",
  "month1": "$200,000",
  "month2": "$125, 000",
  "month3": "$230, 000",
  "month4": "$45,000",
  "month5": "$31,000",
  "month6": "$24,220"
},
 {
  "head": "Runway Months",
  "month1": "$200,000",
  "month2": "$125, 000",
  "month3": "$230, 000",
  "month4": "$45,000",
  "month5": "$31,000",
  "month6": "$24,220"
}
],
"capTable":[

{
  "shareHolders": "John Carter Robinson",
  "shareType": "Angel Investor",
  "noShare": "5",
  "sharePercent": "2.5 %"
},
   {
  "shareHolders": "John Carter Robinson",
  "shareType": "Angel Investor",
  "noShare": "5",
  "sharePercent": "2.5 %"
},
   {
  "shareHolders": "John Carter Robinson",
  "shareType": "Angel Investor",
  "noShare": "5",
  "sharePercent": "2.5 %"
},
   {
  "shareHolders": "John Carter Robinson",
  "shareType": "Angel Investor",
  "noShare": "5",
  "sharePercent": "2.5 %"
},
   {
  "shareHolders": "John Carter Robinson",
  "shareType": "Angel Investor",
  "noShare": "5",
  "sharePercent": "2.5 %"
},
   {
  "shareHolders": "John Carter Robinson",
  "shareType": "Angel Investor",
  "noShare": "5",
  "sharePercent": "2.5 %"
},
   {
  "shareHolders": "",
  "shareType": "Total",
  "noShare": "",
  "sharePercent": "%"
}
 ],
 "previousRound":[
        {
      "invest": "James Parker",
     "fundDate": "20 November 2021",
      "dealType": "Common Equity",
      "fundRound": "Seed",
      "investAmnt": "$30,000",
      "dilution": "20 %",
      "preMoney": "$5, 000",
      "pstMoney": "$10, 000"
    },
    {
  "invest": "James Parker",
 "fundDate": "20 November 2021",
  "dealType": "Common Equity",
  "fundRound": "Seed",
  "investAmnt": "$30,000",
  "dilution": "20 %",
  "preMoney": "$5, 000",
  "pstMoney": "$10, 000"
},
{
  "invest": "James Parker",
 "fundDate": "20 November 2021",
  "dealType": "Common Equity",
  "fundRound": "Pres-Series A",
  "investAmnt": "$30,000",
  "dilution": "20 %",
  "preMoney": "$5, 000",
  "pstMoney": "$10, 000"
},
{
  "invest": "James Parker",
 "fundDate": "20 November 2021",
  "dealType": "Debt Financing",
  "fundRound": "Series A",
  "investAmnt": "$30,000",
  "dilution": "20 %",
  "preMoney": "$5, 000",
  "pstMoney": "$10, 000"
}
 ]

 {appliedArr.map((i) => (
  <ApplicationCard key={i} className="col-lg-4 col-12 col-md-6 mb-4">
    <div>
      {compImage.map((comp, i) => (
        <img className="" key={i} src={comp.logo} alt="company logo" />
      ))}
    </div>
    <div className="my-2">
      {applicationCardData.map((data, i) => (
        <h3 key={i}>{data.title}</h3>
      ))}
    </div>
    <Tag name="Bike Rental" bg="#EDDEFF" color="#1405C1" fz="12px" />
    <div className="my-3">
      {applicationCardData.map((data, i) => (
        <p key={i}>
          {data.content}
          <span data-target="#applied" data-toggle="modal">
            Read More
          </span>
        </p>
      ))}
    </div>
    <button className="appliedBtn mt-2">Applied</button>
  </ApplicationCard>
))}



  {/* Expired Modal starts here */}
  <Modal id="expired" withHeader={false}>
  <ExpiredModal />
</Modal>
{/* Expired Modal end here */}

{/* Expired Card */}
{expiredArr.map((i) => (
  <ApplicationCard key={i} className="col-lg-4 col-12 col-md-6 mb-4">
    <div>
      {compImage.map((comp, i) => (
        <img className="" key={i} src={comp.logo} alt="company logo" />
      ))}
    </div>
    <div className="my-2">
      {applicationCardData.map((data, i) => (
        <h3 key={i}>{data.title}</h3>
      ))}
    </div>
    <Tag name="Customer Support" bg="#FFFCDE" color="#C17605" fz="12px" />
    <div className="my-3">
      {applicationCardData.map((data, i) => (
        <p key={i}>
          {data.content}
          <span data-target="#expired" data-toggle="modal">
            Read More
          </span>
        </p>
      ))}
    </div>
    <button className="expiredBtn mt-2">
      <img className="mr-2 mb-1" src={expired} alt="expired icon" />
      Expired
    </button>
  </ApplicationCard>
))}

{/* Declined Modal starts here  */}
<Modal id="declined" withHeader={false}>
  <DeclinedModal />
</Modal>
{/* Declined Modal end here */}

{/* Declined Card */}



 {/* Applied Modal starts here */}
 <Modal id="applied" withHeader={false}>
 <AppliedModal />
</Modal>
{/* Applied Modal end here */}

{/* Applied Card */}


{applyArr.map((i) => (
  <ApplicationCard key={i} className="col-lg-4 col-12 col-md-6 mb-4">
    <div>
      {compImage.map((comp, i) => (
        <img className="" key={i} src={comp.logo} alt="company logo" />
      ))}
    </div>
    <div className="my-2">
      {applicationCardData.map((data, i) => (
        <h3 key={i}>{data.title}</h3>
      ))}
    </div>
    <Tag name="Analytics" bg="#F5FFDE" color="#05C118" fz="12px" />
    <div className="my-3">
      {applicationCardData.map((data, i) => (
        <p key={i}>
          {data.content}
          <span>Read More</span>
        </p>
      ))}
    </div>
    <button className="applyBtn mt-2">Apply</button>
  </ApplicationCard>
))}
=====================================================================
=======================================================

<div className="col-xl-6 mb-4">
<OpportunityCard
  onClick={() => push(`/investor/opportunities/1`)}
/>
</div>
<div className="col-xl-6 mb-4">
<OpportunityCard
  onClick={() => push(`/investor/opportunities/2`)}
/>
</div>
<div className="col-xl-6 mb-4">
<OpportunityCard
  onClick={() => push(`/investor/opportunities/3`)}
/>
</div>
<div className="col-xl-6 mb-4">
<OpportunityCard
  onClick={() => push(`/investor/opportunities/4`)}
/>
</div>

===========================================
<Tag name="Tech" />
<Tag name="Engineering" color="#40439A" />
<Tag name="Career" color="#E31937" />
=============================================================
           "file":"",
             "name":"Financial Projection",
             "size":"20mb"
  
return (
  <section style={{ overflow: "auto" }}>
    <table
     className="table table-striped"
    >
      <thead>
        <tr style={{ background: "#f8f8fa", color:"#a3a3a3"}} >
         {
           columns.map((item, i) =>(
            
          
          <th key={i} > {item?.Header}</th>
        
           
           ))
         }
         </tr>
      </thead>
      <tbody>
      <tr >
        {data && data.map((row, i) => {
          
          return (
             
            <td> { row } </td>
              
          );

        })}
        </tr>
      </tbody>
    </table>
  </section>
);
};







































































